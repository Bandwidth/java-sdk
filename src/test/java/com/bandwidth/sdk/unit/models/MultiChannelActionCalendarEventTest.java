/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.MultiChannelActionCalendarEvent;
import com.bandwidth.sdk.model.RbmActionTypeEnum;

import java.time.OffsetDateTime;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for MultiChannelActionCalendarEvent
 */
public class MultiChannelActionCalendarEventTest {
    private final MultiChannelActionCalendarEvent model = new MultiChannelActionCalendarEvent()
            .type(RbmActionTypeEnum.REPLY)
            .text("text")
            .postBackData(new byte[]{1, 2, 3})
            .title("title")
            .startTime(OffsetDateTime.now())
            .endTime(OffsetDateTime.now())
            .description("description");

    /**
     * Model tests for MultiChannelActionCalendarEvent
     */
    @Test
    public void testMultiChannelActionCalendarEvent() {
        assertThat(model, instanceOf(MultiChannelActionCalendarEvent.class));
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        assertThat(model.getType(), instanceOf(RbmActionTypeEnum.class));
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        assertThat(model.getText(), instanceOf(String.class));
    }

    /**
     * Test the property 'postBackData'
     */
    @Test
    public void postBackDataTest() {
        assertThat(model.getPostBackData(), instanceOf(byte[].class));
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        assertThat(model.getTitle(), instanceOf(String.class));
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        assertThat(model.getStartTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        assertThat(model.getEndTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        assertThat(model.getDescription(), instanceOf(String.class));
    }

}
