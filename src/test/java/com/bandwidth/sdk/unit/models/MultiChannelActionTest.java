/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.MultiChannelAction;
import com.bandwidth.sdk.model.MultiChannelActionCalendarEvent;
import com.bandwidth.sdk.model.RbmActionBase;
import com.bandwidth.sdk.model.RbmActionDial;
import com.bandwidth.sdk.model.RbmActionOpenUrl;
import com.bandwidth.sdk.model.RbmActionViewLocation;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;


/**
 * Model tests for MultiChannelAction
*/
public class MultiChannelActionTest {
    private final MultiChannelAction modelRbmActionBase = new MultiChannelAction(new RbmActionBase());
    private final MultiChannelAction modelRbmActionDial = new MultiChannelAction(new RbmActionDial());
    private final MultiChannelAction modelRbmActionViewLocation = new MultiChannelAction(new RbmActionViewLocation());
    private final MultiChannelAction modelMultiChannelActionCalendarEvent = new MultiChannelAction(new MultiChannelActionCalendarEvent());
    private final MultiChannelAction modelRbmActionOpenUrl = new MultiChannelAction(new RbmActionOpenUrl());

    /**
     * Model tests for MultiChannelAction
    */
    @Test
    public void testMultiChannelAction() {
        assertThat(modelRbmActionBase, instanceOf(MultiChannelAction.class));
        assertThat(modelRbmActionBase.getActualInstance(), instanceOf(RbmActionBase.class));
        assertThat(modelRbmActionDial, instanceOf(MultiChannelAction.class));
        assertThat(modelRbmActionDial.getActualInstance(), instanceOf(RbmActionDial.class));
        assertThat(modelRbmActionViewLocation, instanceOf(MultiChannelAction.class));
        assertThat(modelRbmActionViewLocation.getActualInstance(), instanceOf(RbmActionViewLocation.class));
        assertThat(modelMultiChannelActionCalendarEvent, instanceOf(MultiChannelAction.class));
        assertThat(modelMultiChannelActionCalendarEvent.getActualInstance(), instanceOf(MultiChannelActionCalendarEvent.class));
        assertThat(modelRbmActionOpenUrl, instanceOf(MultiChannelAction.class));
        assertThat(modelRbmActionOpenUrl.getActualInstance(), instanceOf(RbmActionOpenUrl.class));
    }

}
