/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import java.time.OffsetDateTime;
import java.util.UUID;

import com.bandwidth.sdk.model.TfvStatusWithSubmissionInfo;
import com.bandwidth.sdk.model.TfvStatusEnum;
import com.bandwidth.sdk.model.TfvSubmissionInfo;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for TfvStatusWithSubmissionInfo
 */
public class TfvStatusWithSubmissionInfoTest {
    private final TfvStatusWithSubmissionInfo model = new TfvStatusWithSubmissionInfo()
            .phoneNumber("phoneNumber")
            .status(TfvStatusEnum.PENDING)
            .internalTicketNumber(UUID.randomUUID())
            .declineReasonDescription("declineReasonDescription")
            .resubmitAllowed(true)
            .createdDateTime(OffsetDateTime.now())
            .modifiedDateTime(OffsetDateTime.now())
            .submission(new TfvSubmissionInfo());

    /**
     * Model tests for TfvStatusWithSubmissionInfo
     */
    @Test
    public void testTfvStatusWithSubmissionInfo() {
        assertThat(model, instanceOf(TfvStatusWithSubmissionInfo.class));
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        assertThat(model.getPhoneNumber(), instanceOf(String.class));
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        assertThat(model.getStatus(), instanceOf(TfvStatusEnum.class));
    }

    /**
     * Test the property 'internalTicketNumber'
     */
    @Test
    public void internalTicketNumberTest() {
        assertThat(model.getInternalTicketNumber(), instanceOf(UUID.class));
    }

    /**
     * Test the property 'declineReasonDescription'
     */
    @Test
    public void declineReasonDescriptionTest() {
        assertThat(model.getDeclineReasonDescription(), instanceOf(String.class));
    }

    /**
     * Test the property 'resubmitAllowed'
     */
    @Test
    public void resubmitAllowedTest() {
        assertThat(model.getResubmitAllowed(), instanceOf(Boolean.class));
    }

    /**
     * Test the property 'createdDateTime'
     */
    @Test
    public void createdDateTimeTest() {
        assertThat(model.getCreatedDateTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'modifiedDateTime'
     */
    @Test
    public void modifiedDateTimeTest() {
        assertThat(model.getModifiedDateTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'submission'
     */
    @Test
    public void submissionTest() {
        assertThat(model.getSubmission(), instanceOf(TfvSubmissionInfo.class));
    }

}
