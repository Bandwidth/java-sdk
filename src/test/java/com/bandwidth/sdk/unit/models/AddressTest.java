/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.Address;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for Address
 */
public class AddressTest {
    private final Address model = new Address()
            .name("name")
            .addr1("addr1")
            .addr2("addr2")
            .city("city")
            .state("state")
            .zip("zip")
            .url("url");

    /**
     * Model tests for Address
     */
    @Test
    public void testAddress() {
        assertThat(model, instanceOf(Address.class));
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        assertThat(model.getName(), instanceOf(String.class));
    }

    /**
     * Test the property 'addr1'
     */
    @Test
    public void addr1Test() {
        assertThat(model.getAddr1(), instanceOf(String.class));
    }

    /**
     * Test the property 'addr2'
     */
    @Test
    public void addr2Test() {
        assertThat(model.getAddr2(), instanceOf(String.class));
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        assertThat(model.getCity(), instanceOf(String.class));
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        assertThat(model.getState(), instanceOf(String.class));
    }

    /**
     * Test the property 'zip'
     */
    @Test
    public void zipTest() {
        assertThat(model.getZip(), instanceOf(String.class));
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        assertThat(model.getUrl(), instanceOf(String.class));
    }

}
