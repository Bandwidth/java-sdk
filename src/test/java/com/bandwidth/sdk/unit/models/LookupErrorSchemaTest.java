/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.unit.models;

import com.bandwidth.sdk.model.LookupErrorSchema;
import com.bandwidth.sdk.model.LookupErrorSchemaMeta;

import java.util.Arrays;
import java.util.ArrayList;

import org.junit.jupiter.api.Test;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for LookupErrorSchema
 */
public class LookupErrorSchemaTest {
    private final LookupErrorSchema model = new LookupErrorSchema()
            .code("VALIDATION_ERROR")
            .description("The provided phone number is not valid.")
            .type("validation")
            .meta(new LookupErrorSchemaMeta()
                    .phoneNumbers(new ArrayList<String>(Arrays.asList("1234567890", "0987654321")))
                    .message("Sample error message")
                    .code(400)
            );

    /**
     * Model tests for LookupErrorSchema
     */
    @Test
    public void testLookupErrorSchema() {
        assertThat(model, instanceOf(LookupErrorSchema.class));
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        assertThat(model.getCode(), instanceOf(String.class));
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        assertThat(model.getDescription(), instanceOf(String.class));
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        assertThat(model.getType(), instanceOf(String.class));
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        assertThat(model.getMeta(), instanceOf(LookupErrorSchemaMeta.class));
    }

}
