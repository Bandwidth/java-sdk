/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;
import com.bandwidth.sdk.model.ErrorObject;
import com.bandwidth.sdk.model.Link;
import com.bandwidth.sdk.model.MultiChannelError;

import static org.hamcrest.CoreMatchers.instanceOf;
import static org.hamcrest.MatcherAssert.assertThat;

/**
 * Model tests for MultiChannelError
 */
public class MultiChannelErrorTest {
    private final MultiChannelError model = new MultiChannelError()
            .links(Arrays.asList(new Link()))
            .data("data")
            .errors(Arrays.asList(new ErrorObject()));

    /**
     * Model tests for MultiChannelError
     */
    @Test
    public void testMultiChannelError() {
        assertThat(model, instanceOf(MultiChannelError.class));
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        assertThat(model.getLinks(), instanceOf(List.class));
        assertThat(model.getLinks().get(0), instanceOf(Link.class));
    }

    /**
     * Test the property 'data'
     */
    @Test
    public void dataTest() {
        assertThat(model.getData(), instanceOf(String.class));
    }

    /**
     * Test the property 'errors'
     */
    @Test
    public void errorsTest() {
        assertThat(model.getErrors(), instanceOf(List.class));
        assertThat(model.getErrors().get(0), instanceOf(ErrorObject.class));
    }

}
