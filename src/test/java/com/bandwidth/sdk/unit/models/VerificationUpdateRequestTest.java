/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.VerificationUpdateRequest;
import com.bandwidth.sdk.model.Address;
import com.bandwidth.sdk.model.Contact;
import com.bandwidth.sdk.model.OptInWorkflow;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for VerificationUpdateRequest
 */
public class VerificationUpdateRequestTest {
    private final VerificationUpdateRequest model = new VerificationUpdateRequest()
            .businessAddress(new Address())
            .businessContact(new Contact())
            .messageVolume(1)
            .useCase("useCase")
            .useCaseSummary("useCaseSummary")
            .productionMessageContent("productionMessageContent")
            .optInWorkflow(new OptInWorkflow())
            .additionalInformation("additionalInformation")
            .isvReseller("isvReseller");

    /**
     * Model tests for VerificationUpdateRequest
     */
    @Test
    public void testVerificationUpdateRequest() {
        assertThat(model, instanceOf(VerificationUpdateRequest.class));
    }

    /**
     * Test the property 'businessAddress'
     */
    @Test
    public void businessAddressTest() {
        assertThat(model.getBusinessAddress(), instanceOf(Address.class));
    }

    /**
     * Test the property 'businessContact'
     */
    @Test
    public void businessContactTest() {
        assertThat(model.getBusinessContact(), instanceOf(Contact.class));
    }

    /**
     * Test the property 'messageVolume'
     */
    @Test
    public void messageVolumeTest() {
        assertThat(model.getMessageVolume(), instanceOf(Integer.class));
    }

    /**
     * Test the property 'useCase'
     */
    @Test
    public void useCaseTest() {
        assertThat(model.getUseCase(), instanceOf(String.class));
    }

    /**
     * Test the property 'useCaseSummary'
     */
    @Test
    public void useCaseSummaryTest() {
        assertThat(model.getUseCaseSummary(), instanceOf(String.class));
    }

    /**
     * Test the property 'productionMessageContent'
     */
    @Test
    public void productionMessageContentTest() {
        assertThat(model.getProductionMessageContent(), instanceOf(String.class));
    }

    /**
     * Test the property 'optInWorkflow'
     */
    @Test
    public void optInWorkflowTest() {
        assertThat(model.getOptInWorkflow(), instanceOf(OptInWorkflow.class));
    }

    /**
     * Test the property 'additionalInformation'
     */
    @Test
    public void additionalInformationTest() {
        assertThat(model.getAdditionalInformation(), instanceOf(String.class));
    }

    /**
     * Test the property 'isvReseller'
     */
    @Test
    public void isvResellerTest() {
        assertThat(model.getIsvReseller(), instanceOf(String.class));
    }

}
