/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.DeactivationEventEnum;
import com.bandwidth.sdk.model.LatestMessageDeliveryStatusEnum;
import com.bandwidth.sdk.model.LineTypeEnum;
import com.bandwidth.sdk.model.LookupResult;

import java.time.LocalDate;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for LookupResult
 */
public class LookupResultTest {
    private final LookupResult model = new LookupResult()
            .phoneNumber("1234567890")
            .lineType(LineTypeEnum.MOBILE)
            .messagingProvider("TestProvider")
            .voiceProvider("TestVoiceProvider")
            .countryCodeA3("USA")
            .deactivationReporter("TestReporter")
            .deactivationDate("2023-01-01T00:00:00Z")
            .deactivationEvent(DeactivationEventEnum.DEACTIVATED)
            .latestMessageDeliveryStatus(LatestMessageDeliveryStatusEnum.ACTIVE)
            .initialMessageDeliveryStatusDate(LocalDate.of(2025, 1, 1))
            .latestMessageDeliveryStatusDate(LocalDate.of(2025, 1, 1));


    /**
     * Model tests for LookupResult
     */
    @Test
    public void testLookupResult() {
        assertThat(model, instanceOf(LookupResult.class));
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        assertThat(model.getPhoneNumber(), instanceOf(String.class));
    }

    /**
     * Test the property 'lineType'
     */
    @Test
    public void lineTypeTest() {
        assertThat(model.getLineType(), instanceOf(LineTypeEnum.class));
    }

    /**
     * Test the property 'messagingProvider'
     */
    @Test
    public void messagingProviderTest() {
        assertThat(model.getMessagingProvider(), instanceOf(String.class));
    }

    /**
     * Test the property 'voiceProvider'
     */
    @Test
    public void voiceProviderTest() {
        assertThat(model.getVoiceProvider(), instanceOf(String.class));
    }

    /**
     * Test the property 'countryCodeA3'
     */
    @Test
    public void countryCodeA3Test() {
        assertThat(model.getCountryCodeA3(), instanceOf(String.class));
    }

    /**
     * Test the property 'deactivationReporter'
     */
    @Test
    public void deactivationReporterTest() {
        assertThat(model.getDeactivationReporter(), instanceOf(String.class));
    }

    /**
     * Test the property 'deactivationDate'
     */
    @Test
    public void deactivationDateTest() {
        assertThat(model.getDeactivationDate(), instanceOf(String.class));
    }

    /**
     * Test the property 'deactivationEvent'
     */
    @Test
    public void deactivationEventTest() {
        assertThat(model.getDeactivationEvent(), instanceOf(DeactivationEventEnum.class));
    }

    /**
     * Test the property 'latestMessageDeliveryStatus'
     */
    @Test
    public void latestMessageDeliveryStatusTest() {
        assertThat(model.getLatestMessageDeliveryStatus(), instanceOf(LatestMessageDeliveryStatusEnum.class));
    }

    /**
     * Test the property 'initialMessageDeliveryStatusDate'
     */
    @Test
    public void initialMessageDeliveryStatusDateTest() {
        assertThat(model.getInitialMessageDeliveryStatusDate(), instanceOf(LocalDate.class));
    }

    /**
     * Test the property 'latestMessageDeliveryStatusDate'
     */
    @Test
    public void latestMessageDeliveryStatusDateTest() {
        assertThat(model.getLatestMessageDeliveryStatusDate(), instanceOf(LocalDate.class));
    }

}
