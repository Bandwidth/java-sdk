/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.MultiChannelChannelListObject;
import com.bandwidth.sdk.model.MultiChannelMessageRequest;
import com.bandwidth.sdk.model.PriorityEnum;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for MultiChannelMessageRequest
 */
public class MultiChannelMessageRequestTest {
    private final MultiChannelMessageRequest model = new MultiChannelMessageRequest()
            .to("to")
            .channelList(new ArrayList<MultiChannelChannelListObject>(Arrays.asList(new MultiChannelChannelListObject())))
            .tag("tag")
            .priority(PriorityEnum.DEFAULT)
            .expiration(OffsetDateTime.now());

    /**
     * Model tests for MultiChannelMessageRequest
     */
    @Test
    public void testMultiChannelMessageRequest() {
        assertThat(model, instanceOf(MultiChannelMessageRequest.class));
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        assertThat(model.getTo(), instanceOf(String.class));
    }

    /**
     * Test the property 'channelList'
     */
    @Test
    public void channelListTest() {
        assertThat(model.getChannelList(), instanceOf(ArrayList.class));
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        assertThat(model.getTag(), instanceOf(String.class));
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        assertThat(model.getPriority(), instanceOf(PriorityEnum.class));
    }

    /**
     * Test the property 'expiration'
     */
    @Test
    public void expirationTest() {
        assertThat(model.getExpiration(), instanceOf(OffsetDateTime.class));
    }

}
