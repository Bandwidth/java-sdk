/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import java.time.OffsetDateTime;
import com.bandwidth.sdk.model.InboundCallback;
import com.bandwidth.sdk.model.InboundCallbackMessage;
import com.bandwidth.sdk.model.InboundCallbackTypeEnum;

import static org.hamcrest.CoreMatchers.instanceOf;
import static org.hamcrest.MatcherAssert.assertThat;

/**
 * Model tests for InboundCallback
 */
public class InboundCallbackTest {
    private final InboundCallback model = new InboundCallback()
            .time(OffsetDateTime.now())
            .type(InboundCallbackTypeEnum.MESSAGE_RECEIVED)
            .to("to")
            .description("description")
            .carrierName("carrierName")
            .message(new InboundCallbackMessage());

    /**
     * Model tests for InboundCallback
     */
    @Test
    public void testInboundCallback() {
        assertThat(model, instanceOf(InboundCallback.class));
    }

    /**
     * Test the property 'time'
     */
    @Test
    public void timeTest() {
        assertThat(model.getTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        assertThat(model.getType(), instanceOf(InboundCallbackTypeEnum.class));
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        assertThat(model.getTo(), instanceOf(String.class));
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        assertThat(model.getDescription(), instanceOf(String.class));
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        assertThat(model.getMessage(), instanceOf(InboundCallbackMessage.class));
    }

    /**
     * Test the property 'carrierName'
     */
    @Test
    public void carrierNameTest() {
        assertThat(model.getCarrierName(), instanceOf(String.class));
    }

}
