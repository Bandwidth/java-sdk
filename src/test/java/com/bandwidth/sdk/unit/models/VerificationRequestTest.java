/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.ArrayList;
import com.bandwidth.sdk.model.VerificationRequest;
import com.bandwidth.sdk.model.Address;
import com.bandwidth.sdk.model.BusinessEntityTypeEnum;
import com.bandwidth.sdk.model.BusinessRegistrationTypeEnum;
import com.bandwidth.sdk.model.Contact;
import com.bandwidth.sdk.model.OptInWorkflow;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for VerificationRequest
 */
public class VerificationRequestTest {
    private final VerificationRequest model = new VerificationRequest()
            .businessAddress(new Address())
            .businessContact(new Contact())
            .messageVolume(8)
            .phoneNumbers(new ArrayList<String>(Arrays.asList("phoneNumber")))
            .useCase("useCase")
            .useCaseSummary("useCaseSummary")
            .productionMessageContent("productionMessageContent")
            .optInWorkflow(new OptInWorkflow())
            .additionalInformation("additionalInformation")
            .isvReseller("isvReseller")
            .privacyPolicyUrl("privacyPolicyUrl")
            .termsAndConditionsUrl("termsAndConditionsUrl")
            .businessDba("businessDba")
            .businessRegistrationNumber("businessRegistrationNumber")
            .businessRegistrationType(BusinessRegistrationTypeEnum.EIN)
            .businessEntityType(BusinessEntityTypeEnum.PRIVATE_PROFIT)
            .helpMessageResponse("helpMessageResponse")
            .ageGatedContent(true);

    /**
     * Model tests for VerificationRequest
     */
    @Test
    public void testVerificationRequest() {
        assertThat(model, instanceOf(VerificationRequest.class));
    }

    /**
     * Test the property 'businessAddress'
     */
    @Test
    public void businessAddressTest() {
        assertThat(model.getBusinessAddress(), instanceOf(Address.class));
    }

    /**
     * Test the property 'businessContact'
     */
    @Test
    public void businessContactTest() {
        assertThat(model.getBusinessContact(), instanceOf(Contact.class));
    }

    /**
     * Test the property 'messageVolume'
     */
    @Test
    public void messageVolumeTest() {
        assertThat(model.getMessageVolume(), instanceOf(Integer.class));
    }

    /**
     * Test the property 'phoneNumbers'
     */
    @Test
    public void phoneNumbersTest() {
        assertThat(model.getPhoneNumbers(), instanceOf(ArrayList.class));
    }

    /**
     * Test the property 'useCase'
     */
    @Test
    public void useCaseTest() {
        assertThat(model.getUseCase(), instanceOf(String.class));
    }

    /**
     * Test the property 'useCaseSummary'
     */
    @Test
    public void useCaseSummaryTest() {
        assertThat(model.getUseCaseSummary(), instanceOf(String.class));
    }

    /**
     * Test the property 'productionMessageContent'
     */
    @Test
    public void productionMessageContentTest() {
        assertThat(model.getProductionMessageContent(), instanceOf(String.class));
    }

    /**
     * Test the property 'optInWorkflow'
     */
    @Test
    public void optInWorkflowTest() {
        assertThat(model.getOptInWorkflow(), instanceOf(OptInWorkflow.class));
    }

    /**
     * Test the property 'additionalInformation'
     */
    @Test
    public void additionalInformationTest() {
        assertThat(model.getAdditionalInformation(), instanceOf(String.class));
    }

    /**
     * Test the property 'isvReseller'
     */
    @Test
    public void isvResellerTest() {
        assertThat(model.getIsvReseller(), instanceOf(String.class));
    }

    /**
     * Test the property 'privacyPolicyUrl'
     */
    @Test
    public void privacyPolicyUrlTest() {
        assertThat(model.getPrivacyPolicyUrl(), instanceOf(String.class));
    }

    /**
     * Test the property 'termsAndConditionsUrl'
     */
    @Test
    public void termsAndConditionsUrlTest() {
        assertThat(model.getTermsAndConditionsUrl(), instanceOf(String.class));
    }

    /**
     * Test the property 'businessDba'
     */
    @Test
    public void businessDbaTest() {
        assertThat(model.getBusinessDba(), instanceOf(String.class));
    }

    /**
     * Test the property 'businessRegistrationNumber'
     */
    @Test
    public void businessRegistrationNumberTest() {
        assertThat(model.getBusinessRegistrationNumber(), instanceOf(String.class));
    }

    /**
     * Test the property 'businessRegistrationType'
     */
    @Test
    public void businessRegistrationTypeTest() {
        assertThat(model.getBusinessRegistrationType(), instanceOf(BusinessRegistrationTypeEnum.class));
    }

    /**
     * Test the property 'businessEntityType'
     */
    @Test
    public void businessEntityTypeTest() {
        assertThat(model.getBusinessEntityType(), instanceOf(BusinessEntityTypeEnum.class));
    }

    /**
     * Test the property 'helpMessageResponse'
     */
    @Test
    public void helpMessageResponseTest() {
        assertThat(model.getHelpMessageResponse(), instanceOf(String.class));
    }

    /**
     * Test the property 'ageGatedContent'
     */
    @Test
    public void ageGatedContentTest() {
        assertThat(model.getAgeGatedContent(), instanceOf(Boolean.class));
    }

}
