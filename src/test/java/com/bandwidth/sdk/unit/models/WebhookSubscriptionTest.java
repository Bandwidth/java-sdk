/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import com.bandwidth.sdk.model.WebhookSubscription;
import com.bandwidth.sdk.model.WebhookSubscriptionBasicAuthentication;
import com.bandwidth.sdk.model.WebhookSubscriptionTypeEnum;

import static org.hamcrest.MatcherAssert.assertThat;

import java.time.OffsetDateTime;

import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for WebhookSubscription
 */
public class WebhookSubscriptionTest {
    private final WebhookSubscription model = new WebhookSubscription()
            .id("id")
            .accountId("accountId")
            .callbackUrl("callbackUrl")
            .type(WebhookSubscriptionTypeEnum.TOLLFREE_VERIFICATION_STATUS)
            .basicAuthentication(new WebhookSubscriptionBasicAuthentication())
            .createdDate(OffsetDateTime.now())
            .modifiedDate(OffsetDateTime.now());

    /**
     * Model tests for WebhookSubscription
     */
    @Test
    public void testWebhookSubscription() {
        assertThat(model, instanceOf(WebhookSubscription.class));
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        assertThat(model.getId(), instanceOf(String.class));
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        assertThat(model.getAccountId(), instanceOf(String.class));
    }

    /**
     * Test the property 'callbackUrl'
     */
    @Test
    public void callbackUrlTest() {
        assertThat(model.getCallbackUrl(), instanceOf(String.class));
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        assertThat(model.getType(), instanceOf(WebhookSubscriptionTypeEnum.class));
    }

    /**
     * Test the property 'basicAuthentication'
     */
    @Test
    public void basicAuthenticationTest() {
        assertThat(model.getBasicAuthentication(), instanceOf(WebhookSubscriptionBasicAuthentication.class));
    }

    /**
     * Test the property 'createdDate'
     */
    @Test
    public void createdDateTest() {
        assertThat(model.getCreatedDate(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'modifiedDate'
     */
    @Test
    public void modifiedDateTest() {
        assertThat(model.getModifiedDate(), instanceOf(OffsetDateTime.class));
    }

}
