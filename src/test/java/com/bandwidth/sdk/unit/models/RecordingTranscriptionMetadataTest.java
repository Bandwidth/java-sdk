/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.bandwidth.sdk.unit.models;

import org.junit.jupiter.api.Test;

import java.net.URI;
import java.time.OffsetDateTime;
import com.bandwidth.sdk.model.RecordingTranscriptionMetadata;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.instanceOf;

/**
 * Model tests for RecordingTranscriptionMetadata
 */
public class RecordingTranscriptionMetadataTest {
    private final RecordingTranscriptionMetadata model = new RecordingTranscriptionMetadata()
            .id("id")
            .status("status")
            .completedTime(OffsetDateTime.now())
            .url(URI.create("https://example.com"));

    /**
     * Model tests for RecordingTranscriptionMetadata
     */
    @Test
    public void testRecordingTranscriptionMetadata() {
        assertThat(model, instanceOf(RecordingTranscriptionMetadata.class));
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        assertThat(model.getId(), instanceOf(String.class));
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        assertThat(model.getStatus(), instanceOf(String.class));
    }

    /**
     * Test the property 'completedTime'
     */
    @Test
    public void completedTimeTest() {
        assertThat(model.getCompletedTime(), instanceOf(OffsetDateTime.class));
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        assertThat(model.getUrl(), instanceOf(URI.class));
    }

}
