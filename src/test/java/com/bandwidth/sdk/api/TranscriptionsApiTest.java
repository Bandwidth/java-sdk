/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.api;

import com.bandwidth.sdk.ApiException;
import com.bandwidth.sdk.model.CallTranscriptionMetadata;
import com.bandwidth.sdk.model.CallTranscriptionResponse;
import com.bandwidth.sdk.model.VoiceApiError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TranscriptionsApi
 */
@Disabled
public class TranscriptionsApiTest {

    private final TranscriptionsApi api = new TranscriptionsApi();

    /**
     * Delete a specific transcription
     *
     * Delete the specified transcription that was created on this call via [startTranscription](/docs/voice/bxml/startTranscription).  Note: After the deletion is requested and a &#x60;204&#x60; is returned, the transcription will not be accessible anymore. However, it is not deleted immediately. This deletion process, while transparent and irreversible, can take an additional 24 to 48 hours.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRealTimeTranscriptionTest() throws ApiException {
        String accountId = null;
        String callId = null;
        String transcriptionId = null;
        api.deleteRealTimeTranscription(accountId, callId, transcriptionId);
        // TODO: test validations
    }

    /**
     * Retrieve a specific transcription
     *
     * Retrieve the specified transcription that was created on this call via [startTranscription](/docs/voice/bxml/startTranscription).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRealTimeTranscriptionTest() throws ApiException {
        String accountId = null;
        String callId = null;
        String transcriptionId = null;
        CallTranscriptionResponse response = api.getRealTimeTranscription(accountId, callId, transcriptionId);
        // TODO: test validations
    }

    /**
     * Enumerate transcriptions made with StartTranscription
     *
     * Enumerates the transcriptions created on this call via [startTranscription](/docs/voice/bxml/startTranscription).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listRealTimeTranscriptionsTest() throws ApiException {
        String accountId = null;
        String callId = null;
        List<CallTranscriptionMetadata> response = api.listRealTimeTranscriptions(accountId, callId);
        // TODO: test validations
    }

}
