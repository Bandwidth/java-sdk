/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import com.bandwidth.sdk.ApiException;
import org.openapitools.client.model.CallState;
import org.openapitools.client.model.CreateCall;
import org.openapitools.client.model.CreateCallResponse;
import org.openapitools.client.model.UpdateCall;
import org.openapitools.client.model.VoiceApiError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CallsApi
 */
@Disabled
public class CallsApiTest {

    private final CallsApi api = new CallsApi();

    /**
     * Create Call
     *
     * Creates an outbound phone call.  All calls are initially queued. Your outbound calls will initiated at a specific dequeueing rate, enabling your application to \&quot;fire and forget\&quot; when creating calls. Queued calls may not be modified until they are dequeued and placed, but may be removed from your queue on demand.  &lt;b&gt;Please note:&lt;/b&gt; Calls submitted to your queue will be placed approximately in order, but exact ordering is not guaranteed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCallTest() throws ApiException {
        String accountId = null;
        CreateCall createCall = null;
        CreateCallResponse response = api.createCall(accountId, createCall);
        // TODO: test validations
    }

    /**
     * Get Call State Information
     *
     * Retrieve the current state of a specific call. This information is near-realtime, so it may take a few minutes for your call to be accessible using this endpoint.  **Note**: Call information is kept for 7 days after the calls are hung up. If you attempt to retrieve information for a call that is older than 7 days, you will get an HTTP 404 response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCallStateTest() throws ApiException {
        String accountId = null;
        String callId = null;
        CallState response = api.getCallState(accountId, callId);
        // TODO: test validations
    }

    /**
     * Update Call
     *
     * Interrupts and redirects a call to a different URL that should return a BXML document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCallTest() throws ApiException {
        String accountId = null;
        String callId = null;
        UpdateCall updateCall = null;
        api.updateCall(accountId, callId, updateCall);
        // TODO: test validations
    }

    /**
     * Update Call BXML
     *
     * Interrupts and replaces an active call&#39;s BXML document.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCallBxmlTest() throws ApiException {
        String accountId = null;
        String callId = null;
        String body = null;
        api.updateCallBxml(accountId, callId, body);
        // TODO: test validations
    }

}
