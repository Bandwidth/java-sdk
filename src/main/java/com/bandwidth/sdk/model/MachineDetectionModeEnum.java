/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The machine detection mode. If set to &#39;async&#39;, the detection result will be sent in a &#39;machineDetectionComplete&#39; callback. If set to &#39;sync&#39;, the &#39;answer&#39; callback will wait for the machine detection to complete and will include its result.
 */
@JsonAdapter(MachineDetectionModeEnum.Adapter.class)
public enum MachineDetectionModeEnum {
  
  SYNC("sync"),
  
  ASYNC("async");

  private String value;

  MachineDetectionModeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static MachineDetectionModeEnum fromValue(String value) {
    for (MachineDetectionModeEnum b : MachineDetectionModeEnum.values()) {
      if (b.value.equalsIgnoreCase(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<MachineDetectionModeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final MachineDetectionModeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public MachineDetectionModeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return MachineDetectionModeEnum.fromValue(value);
    }
  }
}

