/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.model;

import java.util.Objects;
import java.util.Locale;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import java.util.Locale;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The type of product associated with the message.
 */
@JsonAdapter(ProductTypeEnum.Adapter.class)
public enum ProductTypeEnum {
  
  LOCAL_A2_P("LOCAL_A2P"),
  
  P2_P("P2P"),
  
  SHORT_CODE_REACH("SHORT_CODE_REACH"),
  
  TOLL_FREE("TOLL_FREE"),
  
  HOSTED_SHORT_CODE("HOSTED_SHORT_CODE"),
  
  ALPHA_NUMERIC("ALPHA_NUMERIC"),
  
  RBM_MEDIA("RBM_MEDIA"),
  
  RBM_RICH("RBM_RICH"),
  
  RBM_CONVERSATIONAL("RBM_CONVERSATIONAL");

  private String value;

  ProductTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static ProductTypeEnum fromValue(String value) {
    for (ProductTypeEnum b : ProductTypeEnum.values()) {
      if (b.value.equalsIgnoreCase(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<ProductTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final ProductTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ProductTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return ProductTypeEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    ProductTypeEnum.fromValue(value);
  }
}

