/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.model;

import java.util.Objects;
import java.util.Locale;
import com.bandwidth.sdk.model.DeactivationEventEnum;
import com.bandwidth.sdk.model.LatestMessageDeliveryStatusEnum;
import com.bandwidth.sdk.model.LineTypeEnum;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.Locale;

import com.bandwidth.sdk.JSON;

/**
 * Carrier information results for the specified telephone number.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.16.0")
public class LookupResult {
  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  @javax.annotation.Nullable
  private String phoneNumber;

  public static final String SERIALIZED_NAME_LINE_TYPE = "lineType";
  @SerializedName(SERIALIZED_NAME_LINE_TYPE)
  @javax.annotation.Nullable
  private LineTypeEnum lineType;

  public static final String SERIALIZED_NAME_MESSAGING_PROVIDER = "messagingProvider";
  @SerializedName(SERIALIZED_NAME_MESSAGING_PROVIDER)
  @javax.annotation.Nullable
  private String messagingProvider;

  public static final String SERIALIZED_NAME_VOICE_PROVIDER = "voiceProvider";
  @SerializedName(SERIALIZED_NAME_VOICE_PROVIDER)
  @javax.annotation.Nullable
  private String voiceProvider;

  public static final String SERIALIZED_NAME_COUNTRY_CODE_A3 = "countryCodeA3";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE_A3)
  @javax.annotation.Nullable
  private String countryCodeA3;

  public static final String SERIALIZED_NAME_DEACTIVATION_REPORTER = "deactivationReporter";
  @SerializedName(SERIALIZED_NAME_DEACTIVATION_REPORTER)
  @javax.annotation.Nullable
  private String deactivationReporter;

  public static final String SERIALIZED_NAME_DEACTIVATION_DATE = "deactivationDate";
  @SerializedName(SERIALIZED_NAME_DEACTIVATION_DATE)
  @javax.annotation.Nullable
  private String deactivationDate;

  public static final String SERIALIZED_NAME_DEACTIVATION_EVENT = "deactivationEvent";
  @SerializedName(SERIALIZED_NAME_DEACTIVATION_EVENT)
  @javax.annotation.Nullable
  private DeactivationEventEnum deactivationEvent;

  public static final String SERIALIZED_NAME_LATEST_MESSAGE_DELIVERY_STATUS = "latestMessageDeliveryStatus";
  @SerializedName(SERIALIZED_NAME_LATEST_MESSAGE_DELIVERY_STATUS)
  @javax.annotation.Nullable
  private LatestMessageDeliveryStatusEnum latestMessageDeliveryStatus;

  public static final String SERIALIZED_NAME_INITIAL_MESSAGE_DELIVERY_STATUS_DATE = "initialMessageDeliveryStatusDate";
  @SerializedName(SERIALIZED_NAME_INITIAL_MESSAGE_DELIVERY_STATUS_DATE)
  @javax.annotation.Nullable
  private LocalDate initialMessageDeliveryStatusDate;

  public static final String SERIALIZED_NAME_LATEST_MESSAGE_DELIVERY_STATUS_DATE = "latestMessageDeliveryStatusDate";
  @SerializedName(SERIALIZED_NAME_LATEST_MESSAGE_DELIVERY_STATUS_DATE)
  @javax.annotation.Nullable
  private LocalDate latestMessageDeliveryStatusDate;

  public LookupResult() {
  }

  public LookupResult phoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * The telephone number in E.164 format.
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public LookupResult lineType(@javax.annotation.Nullable LineTypeEnum lineType) {
    this.lineType = lineType;
    return this;
  }

  /**
   * Get lineType
   * @return lineType
   */
  @javax.annotation.Nullable
  public LineTypeEnum getLineType() {
    return lineType;
  }

  public void setLineType(@javax.annotation.Nullable LineTypeEnum lineType) {
    this.lineType = lineType;
  }


  public LookupResult messagingProvider(@javax.annotation.Nullable String messagingProvider) {
    this.messagingProvider = messagingProvider;
    return this;
  }

  /**
   * The messaging service provider of the telephone number.
   * @return messagingProvider
   */
  @javax.annotation.Nullable
  public String getMessagingProvider() {
    return messagingProvider;
  }

  public void setMessagingProvider(@javax.annotation.Nullable String messagingProvider) {
    this.messagingProvider = messagingProvider;
  }


  public LookupResult voiceProvider(@javax.annotation.Nullable String voiceProvider) {
    this.voiceProvider = voiceProvider;
    return this;
  }

  /**
   * The voice service provider of the telephone number.
   * @return voiceProvider
   */
  @javax.annotation.Nullable
  public String getVoiceProvider() {
    return voiceProvider;
  }

  public void setVoiceProvider(@javax.annotation.Nullable String voiceProvider) {
    this.voiceProvider = voiceProvider;
  }


  public LookupResult countryCodeA3(@javax.annotation.Nullable String countryCodeA3) {
    this.countryCodeA3 = countryCodeA3;
    return this;
  }

  /**
   * The country code of the telephone number in ISO 3166-1 alpha-3 format.
   * @return countryCodeA3
   */
  @javax.annotation.Nullable
  public String getCountryCodeA3() {
    return countryCodeA3;
  }

  public void setCountryCodeA3(@javax.annotation.Nullable String countryCodeA3) {
    this.countryCodeA3 = countryCodeA3;
  }


  public LookupResult deactivationReporter(@javax.annotation.Nullable String deactivationReporter) {
    this.deactivationReporter = deactivationReporter;
    return this;
  }

  /**
   * [DNI-Only](#section/DNI-Only). The carrier that reported a deactivation event for this phone number. 
   * @return deactivationReporter
   */
  @javax.annotation.Nullable
  public String getDeactivationReporter() {
    return deactivationReporter;
  }

  public void setDeactivationReporter(@javax.annotation.Nullable String deactivationReporter) {
    this.deactivationReporter = deactivationReporter;
  }


  public LookupResult deactivationDate(@javax.annotation.Nullable String deactivationDate) {
    this.deactivationDate = deactivationDate;
    return this;
  }

  /**
   * [DNI-Only](#section/DNI-Only). The datetime the carrier reported a deactivation event.
   * @return deactivationDate
   */
  @javax.annotation.Nullable
  public String getDeactivationDate() {
    return deactivationDate;
  }

  public void setDeactivationDate(@javax.annotation.Nullable String deactivationDate) {
    this.deactivationDate = deactivationDate;
  }


  public LookupResult deactivationEvent(@javax.annotation.Nullable DeactivationEventEnum deactivationEvent) {
    this.deactivationEvent = deactivationEvent;
    return this;
  }

  /**
   * Get deactivationEvent
   * @return deactivationEvent
   */
  @javax.annotation.Nullable
  public DeactivationEventEnum getDeactivationEvent() {
    return deactivationEvent;
  }

  public void setDeactivationEvent(@javax.annotation.Nullable DeactivationEventEnum deactivationEvent) {
    this.deactivationEvent = deactivationEvent;
  }


  public LookupResult latestMessageDeliveryStatus(@javax.annotation.Nullable LatestMessageDeliveryStatusEnum latestMessageDeliveryStatus) {
    this.latestMessageDeliveryStatus = latestMessageDeliveryStatus;
    return this;
  }

  /**
   * Get latestMessageDeliveryStatus
   * @return latestMessageDeliveryStatus
   */
  @javax.annotation.Nullable
  public LatestMessageDeliveryStatusEnum getLatestMessageDeliveryStatus() {
    return latestMessageDeliveryStatus;
  }

  public void setLatestMessageDeliveryStatus(@javax.annotation.Nullable LatestMessageDeliveryStatusEnum latestMessageDeliveryStatus) {
    this.latestMessageDeliveryStatus = latestMessageDeliveryStatus;
  }


  public LookupResult initialMessageDeliveryStatusDate(@javax.annotation.Nullable LocalDate initialMessageDeliveryStatusDate) {
    this.initialMessageDeliveryStatusDate = initialMessageDeliveryStatusDate;
    return this;
  }

  /**
   * [DNI-Only](#section/DNI-Only). The date the phone number entered the status described in &#x60;latestMessageDeliveryStatus&#x60;.  Think of this as the \&quot;start time\&quot; for that status. Value resets every time the &#x60;latestMessageDeliveryStatus&#x60; changes.
   * @return initialMessageDeliveryStatusDate
   */
  @javax.annotation.Nullable
  public LocalDate getInitialMessageDeliveryStatusDate() {
    return initialMessageDeliveryStatusDate;
  }

  public void setInitialMessageDeliveryStatusDate(@javax.annotation.Nullable LocalDate initialMessageDeliveryStatusDate) {
    this.initialMessageDeliveryStatusDate = initialMessageDeliveryStatusDate;
  }


  public LookupResult latestMessageDeliveryStatusDate(@javax.annotation.Nullable LocalDate latestMessageDeliveryStatusDate) {
    this.latestMessageDeliveryStatusDate = latestMessageDeliveryStatusDate;
    return this;
  }

  /**
   * [DNI-Only](#section/DNI-Only). The date bandwidth last received delivery status information for this phone number.  Use this field to understand how up-to-date the &#x60;latestMessageDeliveryStatus&#x60; is. Value resets every time the &#x60;latestMessageDeliveryStatus&#x60; changes.
   * @return latestMessageDeliveryStatusDate
   */
  @javax.annotation.Nullable
  public LocalDate getLatestMessageDeliveryStatusDate() {
    return latestMessageDeliveryStatusDate;
  }

  public void setLatestMessageDeliveryStatusDate(@javax.annotation.Nullable LocalDate latestMessageDeliveryStatusDate) {
    this.latestMessageDeliveryStatusDate = latestMessageDeliveryStatusDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the LookupResult instance itself
   */
  public LookupResult putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LookupResult lookupResult = (LookupResult) o;
    return Objects.equals(this.phoneNumber, lookupResult.phoneNumber) &&
        Objects.equals(this.lineType, lookupResult.lineType) &&
        Objects.equals(this.messagingProvider, lookupResult.messagingProvider) &&
        Objects.equals(this.voiceProvider, lookupResult.voiceProvider) &&
        Objects.equals(this.countryCodeA3, lookupResult.countryCodeA3) &&
        Objects.equals(this.deactivationReporter, lookupResult.deactivationReporter) &&
        Objects.equals(this.deactivationDate, lookupResult.deactivationDate) &&
        Objects.equals(this.deactivationEvent, lookupResult.deactivationEvent) &&
        Objects.equals(this.latestMessageDeliveryStatus, lookupResult.latestMessageDeliveryStatus) &&
        Objects.equals(this.initialMessageDeliveryStatusDate, lookupResult.initialMessageDeliveryStatusDate) &&
        Objects.equals(this.latestMessageDeliveryStatusDate, lookupResult.latestMessageDeliveryStatusDate)&&
        Objects.equals(this.additionalProperties, lookupResult.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, lineType, messagingProvider, voiceProvider, countryCodeA3, deactivationReporter, deactivationDate, deactivationEvent, latestMessageDeliveryStatus, initialMessageDeliveryStatusDate, latestMessageDeliveryStatusDate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LookupResult {\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    lineType: ").append(toIndentedString(lineType)).append("\n");
    sb.append("    messagingProvider: ").append(toIndentedString(messagingProvider)).append("\n");
    sb.append("    voiceProvider: ").append(toIndentedString(voiceProvider)).append("\n");
    sb.append("    countryCodeA3: ").append(toIndentedString(countryCodeA3)).append("\n");
    sb.append("    deactivationReporter: ").append(toIndentedString(deactivationReporter)).append("\n");
    sb.append("    deactivationDate: ").append(toIndentedString(deactivationDate)).append("\n");
    sb.append("    deactivationEvent: ").append(toIndentedString(deactivationEvent)).append("\n");
    sb.append("    latestMessageDeliveryStatus: ").append(toIndentedString(latestMessageDeliveryStatus)).append("\n");
    sb.append("    initialMessageDeliveryStatusDate: ").append(toIndentedString(initialMessageDeliveryStatusDate)).append("\n");
    sb.append("    latestMessageDeliveryStatusDate: ").append(toIndentedString(latestMessageDeliveryStatusDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("phoneNumber", "lineType", "messagingProvider", "voiceProvider", "countryCodeA3", "deactivationReporter", "deactivationDate", "deactivationEvent", "latestMessageDeliveryStatus", "initialMessageDeliveryStatusDate", "latestMessageDeliveryStatusDate"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LookupResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LookupResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format(Locale.ROOT, "The required field(s) %s in LookupResult is not found in the empty JSON string", LookupResult.openapiRequiredFields.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      // validate the optional field `lineType`
      if (jsonObj.get("lineType") != null && !jsonObj.get("lineType").isJsonNull()) {
        LineTypeEnum.validateJsonElement(jsonObj.get("lineType"));
      }
      if ((jsonObj.get("messagingProvider") != null && !jsonObj.get("messagingProvider").isJsonNull()) && !jsonObj.get("messagingProvider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `messagingProvider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messagingProvider").toString()));
      }
      if ((jsonObj.get("voiceProvider") != null && !jsonObj.get("voiceProvider").isJsonNull()) && !jsonObj.get("voiceProvider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `voiceProvider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voiceProvider").toString()));
      }
      if ((jsonObj.get("countryCodeA3") != null && !jsonObj.get("countryCodeA3").isJsonNull()) && !jsonObj.get("countryCodeA3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `countryCodeA3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCodeA3").toString()));
      }
      if ((jsonObj.get("deactivationReporter") != null && !jsonObj.get("deactivationReporter").isJsonNull()) && !jsonObj.get("deactivationReporter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `deactivationReporter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deactivationReporter").toString()));
      }
      if ((jsonObj.get("deactivationDate") != null && !jsonObj.get("deactivationDate").isJsonNull()) && !jsonObj.get("deactivationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format(Locale.ROOT, "Expected the field `deactivationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deactivationDate").toString()));
      }
      // validate the optional field `deactivationEvent`
      if (jsonObj.get("deactivationEvent") != null && !jsonObj.get("deactivationEvent").isJsonNull()) {
        DeactivationEventEnum.validateJsonElement(jsonObj.get("deactivationEvent"));
      }
      // validate the optional field `latestMessageDeliveryStatus`
      if (jsonObj.get("latestMessageDeliveryStatus") != null && !jsonObj.get("latestMessageDeliveryStatus").isJsonNull()) {
        LatestMessageDeliveryStatusEnum.validateJsonElement(jsonObj.get("latestMessageDeliveryStatus"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LookupResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LookupResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LookupResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LookupResult.class));

       return (TypeAdapter<T>) new TypeAdapter<LookupResult>() {
           @Override
           public void write(JsonWriter out, LookupResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public LookupResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             LookupResult instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format(Locale.ROOT, "The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LookupResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LookupResult
   * @throws IOException if the JSON string is invalid with respect to LookupResult
   */
  public static LookupResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LookupResult.class);
  }

  /**
   * Convert an instance of LookupResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

