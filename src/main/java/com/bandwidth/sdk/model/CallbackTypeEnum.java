/*
 * Bandwidth
 * Bandwidth's Communication APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: letstalk@bandwidth.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bandwidth.sdk.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Indicates the type of the callback: - &#x60;message-received&#x60; for inbound callbacks. - One of &#x60;message-sending&#x60;, &#x60;message-delivered&#x60;, &#x60;message-failed&#x60; for status callbacks. 
 */
@JsonAdapter(CallbackTypeEnum.Adapter.class)
public enum CallbackTypeEnum {
  
  RECEIVED("message-received"),
  
  SENDING("message-sending"),
  
  DELIVERED("message-delivered"),
  
  FAILED("message-failed");

  private String value;

  CallbackTypeEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CallbackTypeEnum fromValue(String value) {
    for (CallbackTypeEnum b : CallbackTypeEnum.values()) {
      if (b.value.equalsIgnoreCase(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CallbackTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final CallbackTypeEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CallbackTypeEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CallbackTypeEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    CallbackTypeEnum.fromValue(value);
  }
}

