/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth;

import java.util.Base64;
import java.util.concurrent.CompletableFuture;

import com.bandwidth.http.request.HttpRequest;

/**
 * Utility class for authorization and token management
 */
 public class MessagingBasicAuthManager implements AuthManager, MessagingBasicAuthCredentials {

    /**
     * Constructor
     */
    public MessagingBasicAuthManager(String username, String password) {
        this.username = username;
        this.password = password;
    }

    /**
     * BasicAuth username to be used for requests
     */
    private String username;

    /**
     * BasicAuth password to be used for requests
     */
    private String password;

    /**
     * Adds authentication to the given HttpRequest
     */
    public HttpRequest apply(HttpRequest httpRequest) {
        String authCredentials = username + ":" + password;
        httpRequest.getHeaders().add("Authorization", "Basic " + Base64.getEncoder().encodeToString(authCredentials.getBytes()));
        return httpRequest;
    }

    /**
     * Asynchronously adds authentication to the given HttpRequest
     */
    public CompletableFuture<HttpRequest> applyAsync(HttpRequest httpRequest) {
        String authCredentials = username + ":" + password;
        httpRequest.getHeaders().add("Authorization", "Basic " + Base64.getEncoder().encodeToString(authCredentials.getBytes()));
        return CompletableFuture.completedFuture(httpRequest);
    }

    /**
     * @return username
     */
    public String getMessagingBasicAuthUserName() {
        return username;
    }

    /**
     * @return password
     */
    public String getMessagingBasicAuthPassword() {
        return password;
    }
}
