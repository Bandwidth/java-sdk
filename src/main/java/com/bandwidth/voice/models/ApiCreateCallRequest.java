/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ApiCreateCallRequest type.
 */
public class ApiCreateCallRequest {
    private String from;
    private String to;
    private String uui;
    private Double callTimeout;
    private Double callbackTimeout;
    private String answerUrl;
    private String answerFallbackUrl;
    private String username;
    private String password;
    private String fallbackUsername;
    private String fallbackPassword;
    private AnswerMethodEnum answerMethod;
    private AnswerFallbackMethodEnum answerFallbackMethod;
    private String disconnectUrl;
    private DisconnectMethodEnum disconnectMethod;
    private String tag;
    private String applicationId;
    private String obfuscatedTo;
    private String obfuscatedFrom;

    /**
     * Default constructor.
     */
    public ApiCreateCallRequest() {
    }

    /**
     * Initialization constructor.
     * @param from String value for from.
     * @param to String value for to.
     * @param answerUrl String value for answerUrl.
     * @param applicationId String value for applicationId.
     * @param uui String value for uui.
     * @param callTimeout Double value for callTimeout.
     * @param callbackTimeout Double value for callbackTimeout.
     * @param answerFallbackUrl String value for answerFallbackUrl.
     * @param username String value for username.
     * @param password String value for password.
     * @param fallbackUsername String value for fallbackUsername.
     * @param fallbackPassword String value for fallbackPassword.
     * @param answerMethod AnswerMethodEnum value for answerMethod.
     * @param answerFallbackMethod AnswerFallbackMethodEnum value for answerFallbackMethod.
     * @param disconnectUrl String value for disconnectUrl.
     * @param disconnectMethod DisconnectMethodEnum value for disconnectMethod.
     * @param tag String value for tag.
     * @param obfuscatedTo String value for obfuscatedTo.
     * @param obfuscatedFrom String value for obfuscatedFrom.
     */
    public ApiCreateCallRequest(
            String from,
            String to,
            String answerUrl,
            String applicationId,
            String uui,
            Double callTimeout,
            Double callbackTimeout,
            String answerFallbackUrl,
            String username,
            String password,
            String fallbackUsername,
            String fallbackPassword,
            AnswerMethodEnum answerMethod,
            AnswerFallbackMethodEnum answerFallbackMethod,
            String disconnectUrl,
            DisconnectMethodEnum disconnectMethod,
            String tag,
            String obfuscatedTo,
            String obfuscatedFrom) {
        this.from = from;
        this.to = to;
        this.uui = uui;
        this.callTimeout = callTimeout;
        this.callbackTimeout = callbackTimeout;
        this.answerUrl = answerUrl;
        this.answerFallbackUrl = answerFallbackUrl;
        this.username = username;
        this.password = password;
        this.fallbackUsername = fallbackUsername;
        this.fallbackPassword = fallbackPassword;
        this.answerMethod = answerMethod;
        this.answerFallbackMethod = answerFallbackMethod;
        this.disconnectUrl = disconnectUrl;
        this.disconnectMethod = disconnectMethod;
        this.tag = tag;
        this.applicationId = applicationId;
        this.obfuscatedTo = obfuscatedTo;
        this.obfuscatedFrom = obfuscatedFrom;
    }

    /**
     * Getter for From.
     * Format is E164
     * @return Returns the String
     */
    @JsonGetter("from")
    public String getFrom() {
        return this.from;
    }

    /**
     * Setter for From.
     * Format is E164
     * @param from Value for String
     */
    @JsonSetter("from")
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for To.
     * Format is E164 or SIP URI
     * @return Returns the String
     */
    @JsonGetter("to")
    public String getTo() {
        return this.to;
    }

    /**
     * Setter for To.
     * Format is E164 or SIP URI
     * @param to Value for String
     */
    @JsonSetter("to")
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Getter for Uui.
     * When calling a SIP URI, this will be sent as the 'User-To-User' header within the initial
     * INVITE. An 'encoding' parameter must be specified as described in
     * https://tools.ietf.org/html/rfc7433. This header cannot exceed 256 characters, including the
     * encoding parameter.
     * @return Returns the String
     */
    @JsonGetter("uui")
    public String getUui() {
        return this.uui;
    }

    /**
     * Setter for Uui.
     * When calling a SIP URI, this will be sent as the 'User-To-User' header within the initial
     * INVITE. An 'encoding' parameter must be specified as described in
     * https://tools.ietf.org/html/rfc7433. This header cannot exceed 256 characters, including the
     * encoding parameter.
     * @param uui Value for String
     */
    @JsonSetter("uui")
    public void setUui(String uui) {
        this.uui = uui;
    }

    /**
     * Getter for CallTimeout.
     * @return Returns the Double
     */
    @JsonGetter("callTimeout")
    public Double getCallTimeout() {
        return this.callTimeout;
    }

    /**
     * Setter for CallTimeout.
     * @param callTimeout Value for Double
     */
    @JsonSetter("callTimeout")
    public void setCallTimeout(Double callTimeout) {
        this.callTimeout = callTimeout;
    }

    /**
     * Getter for CallbackTimeout.
     * @return Returns the Double
     */
    @JsonGetter("callbackTimeout")
    public Double getCallbackTimeout() {
        return this.callbackTimeout;
    }

    /**
     * Setter for CallbackTimeout.
     * @param callbackTimeout Value for Double
     */
    @JsonSetter("callbackTimeout")
    public void setCallbackTimeout(Double callbackTimeout) {
        this.callbackTimeout = callbackTimeout;
    }

    /**
     * Getter for AnswerUrl.
     * @return Returns the String
     */
    @JsonGetter("answerUrl")
    public String getAnswerUrl() {
        return this.answerUrl;
    }

    /**
     * Setter for AnswerUrl.
     * @param answerUrl Value for String
     */
    @JsonSetter("answerUrl")
    public void setAnswerUrl(String answerUrl) {
        this.answerUrl = answerUrl;
    }

    /**
     * Getter for AnswerFallbackUrl.
     * @return Returns the String
     */
    @JsonGetter("answerFallbackUrl")
    public String getAnswerFallbackUrl() {
        return this.answerFallbackUrl;
    }

    /**
     * Setter for AnswerFallbackUrl.
     * @param answerFallbackUrl Value for String
     */
    @JsonSetter("answerFallbackUrl")
    public void setAnswerFallbackUrl(String answerFallbackUrl) {
        this.answerFallbackUrl = answerFallbackUrl;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     * @return Returns the String
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for Password.
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for FallbackUsername.
     * @return Returns the String
     */
    @JsonGetter("fallbackUsername")
    public String getFallbackUsername() {
        return this.fallbackUsername;
    }

    /**
     * Setter for FallbackUsername.
     * @param fallbackUsername Value for String
     */
    @JsonSetter("fallbackUsername")
    public void setFallbackUsername(String fallbackUsername) {
        this.fallbackUsername = fallbackUsername;
    }

    /**
     * Getter for FallbackPassword.
     * @return Returns the String
     */
    @JsonGetter("fallbackPassword")
    public String getFallbackPassword() {
        return this.fallbackPassword;
    }

    /**
     * Setter for FallbackPassword.
     * @param fallbackPassword Value for String
     */
    @JsonSetter("fallbackPassword")
    public void setFallbackPassword(String fallbackPassword) {
        this.fallbackPassword = fallbackPassword;
    }

    /**
     * Getter for AnswerMethod.
     * @return Returns the AnswerMethodEnum
     */
    @JsonGetter("answerMethod")
    public AnswerMethodEnum getAnswerMethod() {
        return this.answerMethod;
    }

    /**
     * Setter for AnswerMethod.
     * @param answerMethod Value for AnswerMethodEnum
     */
    @JsonSetter("answerMethod")
    public void setAnswerMethod(AnswerMethodEnum answerMethod) {
        this.answerMethod = answerMethod;
    }

    /**
     * Getter for AnswerFallbackMethod.
     * @return Returns the AnswerFallbackMethodEnum
     */
    @JsonGetter("answerFallbackMethod")
    public AnswerFallbackMethodEnum getAnswerFallbackMethod() {
        return this.answerFallbackMethod;
    }

    /**
     * Setter for AnswerFallbackMethod.
     * @param answerFallbackMethod Value for AnswerFallbackMethodEnum
     */
    @JsonSetter("answerFallbackMethod")
    public void setAnswerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
        this.answerFallbackMethod = answerFallbackMethod;
    }

    /**
     * Getter for DisconnectUrl.
     * @return Returns the String
     */
    @JsonGetter("disconnectUrl")
    public String getDisconnectUrl() {
        return this.disconnectUrl;
    }

    /**
     * Setter for DisconnectUrl.
     * @param disconnectUrl Value for String
     */
    @JsonSetter("disconnectUrl")
    public void setDisconnectUrl(String disconnectUrl) {
        this.disconnectUrl = disconnectUrl;
    }

    /**
     * Getter for DisconnectMethod.
     * @return Returns the DisconnectMethodEnum
     */
    @JsonGetter("disconnectMethod")
    public DisconnectMethodEnum getDisconnectMethod() {
        return this.disconnectMethod;
    }

    /**
     * Setter for DisconnectMethod.
     * @param disconnectMethod Value for DisconnectMethodEnum
     */
    @JsonSetter("disconnectMethod")
    public void setDisconnectMethod(DisconnectMethodEnum disconnectMethod) {
        this.disconnectMethod = disconnectMethod;
    }

    /**
     * Getter for Tag.
     * @return Returns the String
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }

    /**
     * Setter for Tag.
     * @param tag Value for String
     */
    @JsonSetter("tag")
    public void setTag(String tag) {
        this.tag = tag;
    }

    /**
     * Getter for ApplicationId.
     * @return Returns the String
     */
    @JsonGetter("applicationId")
    public String getApplicationId() {
        return this.applicationId;
    }

    /**
     * Setter for ApplicationId.
     * @param applicationId Value for String
     */
    @JsonSetter("applicationId")
    public void setApplicationId(String applicationId) {
        this.applicationId = applicationId;
    }

    /**
     * Getter for ObfuscatedTo.
     * @return Returns the String
     */
    @JsonGetter("obfuscatedTo")
    public String getObfuscatedTo() {
        return this.obfuscatedTo;
    }

    /**
     * Setter for ObfuscatedTo.
     * @param obfuscatedTo Value for String
     */
    @JsonSetter("obfuscatedTo")
    public void setObfuscatedTo(String obfuscatedTo) {
        this.obfuscatedTo = obfuscatedTo;
    }

    /**
     * Getter for ObfuscatedFrom.
     * @return Returns the String
     */
    @JsonGetter("obfuscatedFrom")
    public String getObfuscatedFrom() {
        return this.obfuscatedFrom;
    }

    /**
     * Setter for ObfuscatedFrom.
     * @param obfuscatedFrom Value for String
     */
    @JsonSetter("obfuscatedFrom")
    public void setObfuscatedFrom(String obfuscatedFrom) {
        this.obfuscatedFrom = obfuscatedFrom;
    }

    /**
     * Converts this ApiCreateCallRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiCreateCallRequest [" + "from=" + from + ", to=" + to + ", answerUrl=" + answerUrl
                + ", applicationId=" + applicationId + ", uui=" + uui + ", callTimeout="
                + callTimeout + ", callbackTimeout=" + callbackTimeout + ", answerFallbackUrl="
                + answerFallbackUrl + ", username=" + username + ", password=" + password
                + ", fallbackUsername=" + fallbackUsername + ", fallbackPassword="
                + fallbackPassword + ", answerMethod=" + answerMethod + ", answerFallbackMethod="
                + answerFallbackMethod + ", disconnectUrl=" + disconnectUrl + ", disconnectMethod="
                + disconnectMethod + ", tag=" + tag + ", obfuscatedTo=" + obfuscatedTo
                + ", obfuscatedFrom=" + obfuscatedFrom + "]";
    }

    /**
     * Builds a new {@link ApiCreateCallRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiCreateCallRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(from, to, answerUrl, applicationId)
                .uui(getUui())
                .callTimeout(getCallTimeout())
                .callbackTimeout(getCallbackTimeout())
                .answerFallbackUrl(getAnswerFallbackUrl())
                .username(getUsername())
                .password(getPassword())
                .fallbackUsername(getFallbackUsername())
                .fallbackPassword(getFallbackPassword())
                .answerMethod(getAnswerMethod())
                .answerFallbackMethod(getAnswerFallbackMethod())
                .disconnectUrl(getDisconnectUrl())
                .disconnectMethod(getDisconnectMethod())
                .tag(getTag())
                .obfuscatedTo(getObfuscatedTo())
                .obfuscatedFrom(getObfuscatedFrom());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiCreateCallRequest}.
     */
    public static class Builder {
        private String from;
        private String to;
        private String answerUrl;
        private String applicationId;
        private String uui;
        private Double callTimeout;
        private Double callbackTimeout;
        private String answerFallbackUrl;
        private String username;
        private String password;
        private String fallbackUsername;
        private String fallbackPassword;
        private AnswerMethodEnum answerMethod;
        private AnswerFallbackMethodEnum answerFallbackMethod;
        private String disconnectUrl;
        private DisconnectMethodEnum disconnectMethod;
        private String tag;
        private String obfuscatedTo;
        private String obfuscatedFrom;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param from String value for from.
         * @param to String value for to.
         * @param answerUrl String value for answerUrl.
         * @param applicationId String value for applicationId.
         */
        public Builder(String from,
                String to,
                String answerUrl,
                String applicationId) {
            this.from = from;
            this.to = to;
            this.answerUrl = answerUrl;
            this.applicationId = applicationId;
        }

        /**
         * Setter for from.
         * @param from String value for from.
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for to.
         * @param to String value for to.
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for answerUrl.
         * @param answerUrl String value for answerUrl.
         * @return Builder
         */
        public Builder answerUrl(String answerUrl) {
            this.answerUrl = answerUrl;
            return this;
        }

        /**
         * Setter for applicationId.
         * @param applicationId String value for applicationId.
         * @return Builder
         */
        public Builder applicationId(String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        /**
         * Setter for uui.
         * @param uui String value for uui.
         * @return Builder
         */
        public Builder uui(String uui) {
            this.uui = uui;
            return this;
        }

        /**
         * Setter for callTimeout.
         * @param callTimeout Double value for callTimeout.
         * @return Builder
         */
        public Builder callTimeout(Double callTimeout) {
            this.callTimeout = callTimeout;
            return this;
        }

        /**
         * Setter for callbackTimeout.
         * @param callbackTimeout Double value for callbackTimeout.
         * @return Builder
         */
        public Builder callbackTimeout(Double callbackTimeout) {
            this.callbackTimeout = callbackTimeout;
            return this;
        }

        /**
         * Setter for answerFallbackUrl.
         * @param answerFallbackUrl String value for answerFallbackUrl.
         * @return Builder
         */
        public Builder answerFallbackUrl(String answerFallbackUrl) {
            this.answerFallbackUrl = answerFallbackUrl;
            return this;
        }

        /**
         * Setter for username.
         * @param username String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password.
         * @param password String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for fallbackUsername.
         * @param fallbackUsername String value for fallbackUsername.
         * @return Builder
         */
        public Builder fallbackUsername(String fallbackUsername) {
            this.fallbackUsername = fallbackUsername;
            return this;
        }

        /**
         * Setter for fallbackPassword.
         * @param fallbackPassword String value for fallbackPassword.
         * @return Builder
         */
        public Builder fallbackPassword(String fallbackPassword) {
            this.fallbackPassword = fallbackPassword;
            return this;
        }

        /**
         * Setter for answerMethod.
         * @param answerMethod AnswerMethodEnum value for answerMethod.
         * @return Builder
         */
        public Builder answerMethod(AnswerMethodEnum answerMethod) {
            this.answerMethod = answerMethod;
            return this;
        }

        /**
         * Setter for answerFallbackMethod.
         * @param answerFallbackMethod AnswerFallbackMethodEnum value for answerFallbackMethod.
         * @return Builder
         */
        public Builder answerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
            this.answerFallbackMethod = answerFallbackMethod;
            return this;
        }

        /**
         * Setter for disconnectUrl.
         * @param disconnectUrl String value for disconnectUrl.
         * @return Builder
         */
        public Builder disconnectUrl(String disconnectUrl) {
            this.disconnectUrl = disconnectUrl;
            return this;
        }

        /**
         * Setter for disconnectMethod.
         * @param disconnectMethod DisconnectMethodEnum value for disconnectMethod.
         * @return Builder
         */
        public Builder disconnectMethod(DisconnectMethodEnum disconnectMethod) {
            this.disconnectMethod = disconnectMethod;
            return this;
        }

        /**
         * Setter for tag.
         * @param tag String value for tag.
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Setter for obfuscatedTo.
         * @param obfuscatedTo String value for obfuscatedTo.
         * @return Builder
         */
        public Builder obfuscatedTo(String obfuscatedTo) {
            this.obfuscatedTo = obfuscatedTo;
            return this;
        }

        /**
         * Setter for obfuscatedFrom.
         * @param obfuscatedFrom String value for obfuscatedFrom.
         * @return Builder
         */
        public Builder obfuscatedFrom(String obfuscatedFrom) {
            this.obfuscatedFrom = obfuscatedFrom;
            return this;
        }

        /**
         * Builds a new {@link ApiCreateCallRequest} object using the set fields.
         * @return {@link ApiCreateCallRequest}
         */
        public ApiCreateCallRequest build() {
            return new ApiCreateCallRequest(from, to, answerUrl, applicationId, uui, callTimeout,
                    callbackTimeout, answerFallbackUrl, username, password, fallbackUsername,
                    fallbackPassword, answerMethod, answerFallbackMethod, disconnectUrl,
                    disconnectMethod, tag, obfuscatedTo, obfuscatedFrom);
        }
    }
}
