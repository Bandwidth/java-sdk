/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;


/**
 * This is a model class for ApiCreateCallRequest type.
 */
public class ApiCreateCallRequest {
    /**
     * Default constructor
     */
    public ApiCreateCallRequest() {
    }

    /**
     * Initialization constructor.
     * @param from
     * @param to
     * @param answerUrl
     * @param applicationId
     * @param callTimeout
     * @param callbackTimeout
     * @param answerFallbackUrl
     * @param username
     * @param password
     * @param fallbackUsername
     * @param fallbackPassword
     * @param answerMethod
     * @param answerFallbackMethod
     * @param disconnectUrl
     * @param disconnectMethod
     * @param tag
     * @param obfuscatedTo
     * @param obfuscatedFrom
     */
    public ApiCreateCallRequest(
            String from,
            String to,
            String answerUrl,
            String applicationId,
            Double callTimeout,
            Double callbackTimeout,
            String answerFallbackUrl,
            String username,
            String password,
            String fallbackUsername,
            String fallbackPassword,
            AnswerMethodEnum answerMethod,
            AnswerFallbackMethodEnum answerFallbackMethod,
            String disconnectUrl,
            DisconnectMethodEnum disconnectMethod,
            String tag,
            String obfuscatedTo,
            String obfuscatedFrom) {
        this.from = from;
        this.to = to;
        this.callTimeout = callTimeout;
        this.callbackTimeout = callbackTimeout;
        this.answerUrl = answerUrl;
        this.answerFallbackUrl = answerFallbackUrl;
        this.username = username;
        this.password = password;
        this.fallbackUsername = fallbackUsername;
        this.fallbackPassword = fallbackPassword;
        this.answerMethod = answerMethod;
        this.answerFallbackMethod = answerFallbackMethod;
        this.disconnectUrl = disconnectUrl;
        this.disconnectMethod = disconnectMethod;
        this.tag = tag;
        this.applicationId = applicationId;
        this.obfuscatedTo = obfuscatedTo;
        this.obfuscatedFrom = obfuscatedFrom;
    }

    private String from;
    private String to;
    private Double callTimeout;
    private Double callbackTimeout;
    private String answerUrl;
    private String answerFallbackUrl;
    private String username;
    private String password;
    private String fallbackUsername;
    private String fallbackPassword;
    private AnswerMethodEnum answerMethod;
    private AnswerFallbackMethodEnum answerFallbackMethod;
    private String disconnectUrl;
    private DisconnectMethodEnum disconnectMethod;
    private String tag;
    private String applicationId;
    private String obfuscatedTo;
    private String obfuscatedFrom;
    /**
     * Getter for From.
     * Format is E164
     */
    @JsonGetter("from")
    public String getFrom() {
        return this.from;
    }
    /**
     * Setter for From.
     * Format is E164
     */
    @JsonSetter("from")
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for To.
     * Format is E164
     */
    @JsonGetter("to")
    public String getTo() {
        return this.to;
    }
    /**
     * Setter for To.
     * Format is E164
     */
    @JsonSetter("to")
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Getter for CallTimeout.
     */
    @JsonGetter("callTimeout")
    public Double getCallTimeout() {
        return this.callTimeout;
    }
    /**
     * Setter for CallTimeout.
     */
    @JsonSetter("callTimeout")
    public void setCallTimeout(Double callTimeout) {
        this.callTimeout = callTimeout;
    }

    /**
     * Getter for CallbackTimeout.
     */
    @JsonGetter("callbackTimeout")
    public Double getCallbackTimeout() {
        return this.callbackTimeout;
    }
    /**
     * Setter for CallbackTimeout.
     */
    @JsonSetter("callbackTimeout")
    public void setCallbackTimeout(Double callbackTimeout) {
        this.callbackTimeout = callbackTimeout;
    }

    /**
     * Getter for AnswerUrl.
     */
    @JsonGetter("answerUrl")
    public String getAnswerUrl() {
        return this.answerUrl;
    }
    /**
     * Setter for AnswerUrl.
     */
    @JsonSetter("answerUrl")
    public void setAnswerUrl(String answerUrl) {
        this.answerUrl = answerUrl;
    }

    /**
     * Getter for AnswerFallbackUrl.
     */
    @JsonGetter("answerFallbackUrl")
    public String getAnswerFallbackUrl() {
        return this.answerFallbackUrl;
    }
    /**
     * Setter for AnswerFallbackUrl.
     */
    @JsonSetter("answerFallbackUrl")
    public void setAnswerFallbackUrl(String answerFallbackUrl) {
        this.answerFallbackUrl = answerFallbackUrl;
    }

    /**
     * Getter for Username.
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }
    /**
     * Setter for Username.
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }
    /**
     * Setter for Password.
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for FallbackUsername.
     */
    @JsonGetter("fallbackUsername")
    public String getFallbackUsername() {
        return this.fallbackUsername;
    }
    /**
     * Setter for FallbackUsername.
     */
    @JsonSetter("fallbackUsername")
    public void setFallbackUsername(String fallbackUsername) {
        this.fallbackUsername = fallbackUsername;
    }

    /**
     * Getter for FallbackPassword.
     */
    @JsonGetter("fallbackPassword")
    public String getFallbackPassword() {
        return this.fallbackPassword;
    }
    /**
     * Setter for FallbackPassword.
     */
    @JsonSetter("fallbackPassword")
    public void setFallbackPassword(String fallbackPassword) {
        this.fallbackPassword = fallbackPassword;
    }

    /**
     * Getter for AnswerMethod.
     */
    @JsonGetter("answerMethod")
    public AnswerMethodEnum getAnswerMethod() {
        return this.answerMethod;
    }
    /**
     * Setter for AnswerMethod.
     */
    @JsonSetter("answerMethod")
    public void setAnswerMethod(AnswerMethodEnum answerMethod) {
        this.answerMethod = answerMethod;
    }

    /**
     * Getter for AnswerFallbackMethod.
     */
    @JsonGetter("answerFallbackMethod")
    public AnswerFallbackMethodEnum getAnswerFallbackMethod() {
        return this.answerFallbackMethod;
    }
    /**
     * Setter for AnswerFallbackMethod.
     */
    @JsonSetter("answerFallbackMethod")
    public void setAnswerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
        this.answerFallbackMethod = answerFallbackMethod;
    }

    /**
     * Getter for DisconnectUrl.
     */
    @JsonGetter("disconnectUrl")
    public String getDisconnectUrl() {
        return this.disconnectUrl;
    }
    /**
     * Setter for DisconnectUrl.
     */
    @JsonSetter("disconnectUrl")
    public void setDisconnectUrl(String disconnectUrl) {
        this.disconnectUrl = disconnectUrl;
    }

    /**
     * Getter for DisconnectMethod.
     */
    @JsonGetter("disconnectMethod")
    public DisconnectMethodEnum getDisconnectMethod() {
        return this.disconnectMethod;
    }
    /**
     * Setter for DisconnectMethod.
     */
    @JsonSetter("disconnectMethod")
    public void setDisconnectMethod(DisconnectMethodEnum disconnectMethod) {
        this.disconnectMethod = disconnectMethod;
    }

    /**
     * Getter for Tag.
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }
    /**
     * Setter for Tag.
     */
    @JsonSetter("tag")
    public void setTag(String tag) {
        this.tag = tag;
    }

    /**
     * Getter for ApplicationId.
     */
    @JsonGetter("applicationId")
    public String getApplicationId() {
        return this.applicationId;
    }
    /**
     * Setter for ApplicationId.
     */
    @JsonSetter("applicationId")
    public void setApplicationId(String applicationId) {
        this.applicationId = applicationId;
    }

    /**
     * Getter for ObfuscatedTo.
     */
    @JsonGetter("obfuscatedTo")
    public String getObfuscatedTo() {
        return this.obfuscatedTo;
    }
    /**
     * Setter for ObfuscatedTo.
     */
    @JsonSetter("obfuscatedTo")
    public void setObfuscatedTo(String obfuscatedTo) {
        this.obfuscatedTo = obfuscatedTo;
    }

    /**
     * Getter for ObfuscatedFrom.
     */
    @JsonGetter("obfuscatedFrom")
    public String getObfuscatedFrom() {
        return this.obfuscatedFrom;
    }
    /**
     * Setter for ObfuscatedFrom.
     */
    @JsonSetter("obfuscatedFrom")
    public void setObfuscatedFrom(String obfuscatedFrom) {
        this.obfuscatedFrom = obfuscatedFrom;
    }

 

    /**
     * Builds a new {@link ApiCreateCallRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiCreateCallRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(from,
            to,
            answerUrl,
            applicationId)
            .callTimeout(getCallTimeout())
            .callbackTimeout(getCallbackTimeout())
            .answerFallbackUrl(getAnswerFallbackUrl())
            .username(getUsername())
            .password(getPassword())
            .fallbackUsername(getFallbackUsername())
            .fallbackPassword(getFallbackPassword())
            .answerMethod(getAnswerMethod())
            .answerFallbackMethod(getAnswerFallbackMethod())
            .disconnectUrl(getDisconnectUrl())
            .disconnectMethod(getDisconnectMethod())
            .tag(getTag())
            .obfuscatedTo(getObfuscatedTo())
            .obfuscatedFrom(getObfuscatedFrom());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiCreateCallRequest}
     */
    public static class Builder {
        private String from;
        private String to;
        private String answerUrl;
        private String applicationId;
        private Double callTimeout;
        private Double callbackTimeout;
        private String answerFallbackUrl;
        private String username;
        private String password;
        private String fallbackUsername;
        private String fallbackPassword;
        private AnswerMethodEnum answerMethod;
        private AnswerFallbackMethodEnum answerFallbackMethod;
        private String disconnectUrl;
        private DisconnectMethodEnum disconnectMethod;
        private String tag;
        private String obfuscatedTo;
        private String obfuscatedFrom;

        /**
         * Initialization constructor
         */
        public Builder() {
        }

        /**
         * Initialization constructor
         */
        public Builder(String from,
                String to,
                String answerUrl,
                String applicationId) {
            this.from = from;
            this.to = to;
            this.answerUrl = answerUrl;
            this.applicationId = applicationId;
        }

        /**
         * Setter for from
         * @param from
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for to
         * @param to
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for answerUrl
         * @param answerUrl
         * @return Builder
         */
        public Builder answerUrl(String answerUrl) {
            this.answerUrl = answerUrl;
            return this;
        }

        /**
         * Setter for applicationId
         * @param applicationId
         * @return Builder
         */
        public Builder applicationId(String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        /**
         * Setter for callTimeout
         * @param callTimeout
         * @return Builder
         */
        public Builder callTimeout(Double callTimeout) {
            this.callTimeout = callTimeout;
            return this;
        }

        /**
         * Setter for callbackTimeout
         * @param callbackTimeout
         * @return Builder
         */
        public Builder callbackTimeout(Double callbackTimeout) {
            this.callbackTimeout = callbackTimeout;
            return this;
        }

        /**
         * Setter for answerFallbackUrl
         * @param answerFallbackUrl
         * @return Builder
         */
        public Builder answerFallbackUrl(String answerFallbackUrl) {
            this.answerFallbackUrl = answerFallbackUrl;
            return this;
        }

        /**
         * Setter for username
         * @param username
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password
         * @param password
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for fallbackUsername
         * @param fallbackUsername
         * @return Builder
         */
        public Builder fallbackUsername(String fallbackUsername) {
            this.fallbackUsername = fallbackUsername;
            return this;
        }

        /**
         * Setter for fallbackPassword
         * @param fallbackPassword
         * @return Builder
         */
        public Builder fallbackPassword(String fallbackPassword) {
            this.fallbackPassword = fallbackPassword;
            return this;
        }

        /**
         * Setter for answerMethod
         * @param answerMethod
         * @return Builder
         */
        public Builder answerMethod(AnswerMethodEnum answerMethod) {
            this.answerMethod = answerMethod;
            return this;
        }

        /**
         * Setter for answerFallbackMethod
         * @param answerFallbackMethod
         * @return Builder
         */
        public Builder answerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
            this.answerFallbackMethod = answerFallbackMethod;
            return this;
        }

        /**
         * Setter for disconnectUrl
         * @param disconnectUrl
         * @return Builder
         */
        public Builder disconnectUrl(String disconnectUrl) {
            this.disconnectUrl = disconnectUrl;
            return this;
        }

        /**
         * Setter for disconnectMethod
         * @param disconnectMethod
         * @return Builder
         */
        public Builder disconnectMethod(DisconnectMethodEnum disconnectMethod) {
            this.disconnectMethod = disconnectMethod;
            return this;
        }

        /**
         * Setter for tag
         * @param tag
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Setter for obfuscatedTo
         * @param obfuscatedTo
         * @return Builder
         */
        public Builder obfuscatedTo(String obfuscatedTo) {
            this.obfuscatedTo = obfuscatedTo;
            return this;
        }

        /**
         * Setter for obfuscatedFrom
         * @param obfuscatedFrom
         * @return Builder
         */
        public Builder obfuscatedFrom(String obfuscatedFrom) {
            this.obfuscatedFrom = obfuscatedFrom;
            return this;
        }

        /**
         * Builds a new {@link ApiCreateCallRequest} object using the set fields.
         * @return {@link ApiCreateCallRequest}
         */
        public ApiCreateCallRequest build() {
            return new ApiCreateCallRequest(from,
                to,
                answerUrl,
                applicationId,
                callTimeout,
                callbackTimeout,
                answerFallbackUrl,
                username,
                password,
                fallbackUsername,
                fallbackPassword,
                answerMethod,
                answerFallbackMethod,
                disconnectUrl,
                disconnectMethod,
                tag,
                obfuscatedTo,
                obfuscatedFrom);
        }
    }
}
