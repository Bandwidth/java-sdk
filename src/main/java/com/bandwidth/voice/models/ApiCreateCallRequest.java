/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;


/**
 * This is a model class for ApiCreateCallRequest type.
 */
public class ApiCreateCallRequest {
    /**
     * Default constructor
     */
    public ApiCreateCallRequest() {
    }

    /**
     * Initialization constructor.
     * @param from
     * @param to
     * @param answerUrl
     * @param applicationId
     * @param callTimeout
     * @param username
     * @param password
     * @param answerMethod
     * @param disconnectUrl
     * @param disconnectMethod
     * @param tag
     */
    public ApiCreateCallRequest(
            String from,
            String to,
            String answerUrl,
            String applicationId,
            Double callTimeout,
            String username,
            String password,
            AnswerMethodEnum answerMethod,
            String disconnectUrl,
            DisconnectMethodEnum disconnectMethod,
            String tag) {
        this.from = from;
        this.to = to;
        this.callTimeout = callTimeout;
        this.answerUrl = answerUrl;
        this.username = username;
        this.password = password;
        this.answerMethod = answerMethod;
        this.disconnectUrl = disconnectUrl;
        this.disconnectMethod = disconnectMethod;
        this.tag = tag;
        this.applicationId = applicationId;
    }

    private String from;
    private String to;
    private Double callTimeout;
    private String answerUrl;
    private String username;
    private String password;
    private AnswerMethodEnum answerMethod;
    private String disconnectUrl;
    private DisconnectMethodEnum disconnectMethod;
    private String tag;
    private String applicationId;
    /**
     * Getter for From.
     * Format is E164
     */
    @JsonGetter("from")
    public String getFrom() {
        return this.from;
    }
    /**
     * Setter for From.
     * Format is E164
     */
    @JsonSetter("from")
    public void setFrom(String value) {
        this.from = value;
    }

    /**
     * Getter for To.
     * Format is E164
     */
    @JsonGetter("to")
    public String getTo() {
        return this.to;
    }
    /**
     * Setter for To.
     * Format is E164
     */
    @JsonSetter("to")
    public void setTo(String value) {
        this.to = value;
    }

    /**
     * Getter for CallTimeout.
     */
    @JsonGetter("callTimeout")
    public Double getCallTimeout() {
        return this.callTimeout;
    }
    /**
     * Setter for CallTimeout.
     */
    @JsonSetter("callTimeout")
    public void setCallTimeout(Double value) {
        this.callTimeout = value;
    }

    /**
     * Getter for AnswerUrl.
     */
    @JsonGetter("answerUrl")
    public String getAnswerUrl() {
        return this.answerUrl;
    }
    /**
     * Setter for AnswerUrl.
     */
    @JsonSetter("answerUrl")
    public void setAnswerUrl(String value) {
        this.answerUrl = value;
    }

    /**
     * Getter for Username.
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }
    /**
     * Setter for Username.
     */
    @JsonSetter("username")
    public void setUsername(String value) {
        this.username = value;
    }

    /**
     * Getter for Password.
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }
    /**
     * Setter for Password.
     */
    @JsonSetter("password")
    public void setPassword(String value) {
        this.password = value;
    }

    /**
     * Getter for AnswerMethod.
     */
    @JsonGetter("answerMethod")
    public AnswerMethodEnum getAnswerMethod() {
        return this.answerMethod;
    }
    /**
     * Setter for AnswerMethod.
     */
    @JsonSetter("answerMethod")
    public void setAnswerMethod(AnswerMethodEnum value) {
        this.answerMethod = value;
    }

    /**
     * Getter for DisconnectUrl.
     */
    @JsonGetter("disconnectUrl")
    public String getDisconnectUrl() {
        return this.disconnectUrl;
    }
    /**
     * Setter for DisconnectUrl.
     */
    @JsonSetter("disconnectUrl")
    public void setDisconnectUrl(String value) {
        this.disconnectUrl = value;
    }

    /**
     * Getter for DisconnectMethod.
     */
    @JsonGetter("disconnectMethod")
    public DisconnectMethodEnum getDisconnectMethod() {
        return this.disconnectMethod;
    }
    /**
     * Setter for DisconnectMethod.
     */
    @JsonSetter("disconnectMethod")
    public void setDisconnectMethod(DisconnectMethodEnum value) {
        this.disconnectMethod = value;
    }

    /**
     * Getter for Tag.
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }
    /**
     * Setter for Tag.
     */
    @JsonSetter("tag")
    public void setTag(String value) {
        this.tag = value;
    }

    /**
     * Getter for ApplicationId.
     */
    @JsonGetter("applicationId")
    public String getApplicationId() {
        return this.applicationId;
    }
    /**
     * Setter for ApplicationId.
     */
    @JsonSetter("applicationId")
    public void setApplicationId(String value) {
        this.applicationId = value;
    }

 

    /**
     * Builds a new {@link ApiCreateCallRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiCreateCallRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(from,
            to,
            answerUrl,
            applicationId)
            .callTimeout(getCallTimeout())
            .username(getUsername())
            .password(getPassword())
            .answerMethod(getAnswerMethod())
            .disconnectUrl(getDisconnectUrl())
            .disconnectMethod(getDisconnectMethod())
            .tag(getTag());
            return builder;
    }

    /**
     * Class to build instances of {@link ApiCreateCallRequest}
     */
    public static class Builder {
        private String from;
        private String to;
        private String answerUrl;
        private String applicationId;
        private Double callTimeout;
        private String username;
        private String password;
        private AnswerMethodEnum answerMethod;
        private String disconnectUrl;
        private DisconnectMethodEnum disconnectMethod;
        private String tag;

        /**
         * Initialization constructor
         */
        public Builder() {
            
        }

        /**
         * Initialization constructor
         */
        public Builder(String from,
                String to,
                String answerUrl,
                String applicationId) {
            this.from = from;
            this.to = to;
            this.answerUrl = answerUrl;
            this.applicationId = applicationId;
        }

        /**
         * Setter for from
         * @param from
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }
        /**
         * Setter for to
         * @param to
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }
        /**
         * Setter for answerUrl
         * @param answerUrl
         * @return Builder
         */
        public Builder answerUrl(String answerUrl) {
            this.answerUrl = answerUrl;
            return this;
        }
        /**
         * Setter for applicationId
         * @param applicationId
         * @return Builder
         */
        public Builder applicationId(String applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        /**
         * Setter for callTimeout
         * @param callTimeout
         * @return Builder
         */
        public Builder callTimeout(Double callTimeout) {
            this.callTimeout = callTimeout;
            return this;
        }
        /**
         * Setter for username
         * @param username
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }
        /**
         * Setter for password
         * @param password
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }
        /**
         * Setter for answerMethod
         * @param answerMethod
         * @return Builder
         */
        public Builder answerMethod(AnswerMethodEnum answerMethod) {
            this.answerMethod = answerMethod;
            return this;
        }
        /**
         * Setter for disconnectUrl
         * @param disconnectUrl
         * @return Builder
         */
        public Builder disconnectUrl(String disconnectUrl) {
            this.disconnectUrl = disconnectUrl;
            return this;
        }
        /**
         * Setter for disconnectMethod
         * @param disconnectMethod
         * @return Builder
         */
        public Builder disconnectMethod(DisconnectMethodEnum disconnectMethod) {
            this.disconnectMethod = disconnectMethod;
            return this;
        }
        /**
         * Setter for tag
         * @param tag
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Builds a new {@link ApiCreateCallRequest} object using the set fields.
         * @return {@link ApiCreateCallRequest}
         */
        public ApiCreateCallRequest build() {
            return new ApiCreateCallRequest(from,
                to,
                answerUrl,
                applicationId,
                callTimeout,
                username,
                password,
                answerMethod,
                disconnectUrl,
                disconnectMethod,
                tag);
        }
    }
}
