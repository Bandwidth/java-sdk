/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;


/**
 * This is a model class for CallEngineModifyConferenceRequest type.
 */
public class CallEngineModifyConferenceRequest {
    /**
     * Default constructor
     */
    public CallEngineModifyConferenceRequest() {
    }

    /**
     * Initialization constructor.
     * @param redirectUrl
     * @param status
     * @param redirectFallbackUrl
     * @param redirectMethod
     * @param redirectFallbackMethod
     * @param username
     * @param password
     * @param fallbackUsername
     * @param fallbackPassword
     */
    public CallEngineModifyConferenceRequest(
            String redirectUrl,
            StatusEnum status,
            String redirectFallbackUrl,
            RedirectMethodEnum redirectMethod,
            RedirectFallbackMethodEnum redirectFallbackMethod,
            String username,
            String password,
            String fallbackUsername,
            String fallbackPassword) {
        this.status = status;
        this.redirectUrl = redirectUrl;
        this.redirectFallbackUrl = redirectFallbackUrl;
        this.redirectMethod = redirectMethod;
        this.redirectFallbackMethod = redirectFallbackMethod;
        this.username = username;
        this.password = password;
        this.fallbackUsername = fallbackUsername;
        this.fallbackPassword = fallbackPassword;
    }

    private StatusEnum status;
    private String redirectUrl;
    private String redirectFallbackUrl;
    private RedirectMethodEnum redirectMethod;
    private RedirectFallbackMethodEnum redirectFallbackMethod;
    private String username;
    private String password;
    private String fallbackUsername;
    private String fallbackPassword;
    /**
     * Getter for Status.
     */
    @JsonGetter("status")
    public StatusEnum getStatus() {
        return this.status;
    }
    /**
     * Setter for Status.
     */
    @JsonSetter("status")
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    /**
     * Getter for RedirectUrl.
     */
    @JsonGetter("redirectUrl")
    public String getRedirectUrl() {
        return this.redirectUrl;
    }
    /**
     * Setter for RedirectUrl.
     */
    @JsonSetter("redirectUrl")
    public void setRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
    }

    /**
     * Getter for RedirectFallbackUrl.
     */
    @JsonGetter("redirectFallbackUrl")
    public String getRedirectFallbackUrl() {
        return this.redirectFallbackUrl;
    }
    /**
     * Setter for RedirectFallbackUrl.
     */
    @JsonSetter("redirectFallbackUrl")
    public void setRedirectFallbackUrl(String redirectFallbackUrl) {
        this.redirectFallbackUrl = redirectFallbackUrl;
    }

    /**
     * Getter for RedirectMethod.
     */
    @JsonGetter("redirectMethod")
    public RedirectMethodEnum getRedirectMethod() {
        return this.redirectMethod;
    }
    /**
     * Setter for RedirectMethod.
     */
    @JsonSetter("redirectMethod")
    public void setRedirectMethod(RedirectMethodEnum redirectMethod) {
        this.redirectMethod = redirectMethod;
    }

    /**
     * Getter for RedirectFallbackMethod.
     */
    @JsonGetter("redirectFallbackMethod")
    public RedirectFallbackMethodEnum getRedirectFallbackMethod() {
        return this.redirectFallbackMethod;
    }
    /**
     * Setter for RedirectFallbackMethod.
     */
    @JsonSetter("redirectFallbackMethod")
    public void setRedirectFallbackMethod(RedirectFallbackMethodEnum redirectFallbackMethod) {
        this.redirectFallbackMethod = redirectFallbackMethod;
    }

    /**
     * Getter for Username.
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }
    /**
     * Setter for Username.
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }
    /**
     * Setter for Password.
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for FallbackUsername.
     */
    @JsonGetter("fallbackUsername")
    public String getFallbackUsername() {
        return this.fallbackUsername;
    }
    /**
     * Setter for FallbackUsername.
     */
    @JsonSetter("fallbackUsername")
    public void setFallbackUsername(String fallbackUsername) {
        this.fallbackUsername = fallbackUsername;
    }

    /**
     * Getter for FallbackPassword.
     */
    @JsonGetter("fallbackPassword")
    public String getFallbackPassword() {
        return this.fallbackPassword;
    }
    /**
     * Setter for FallbackPassword.
     */
    @JsonSetter("fallbackPassword")
    public void setFallbackPassword(String fallbackPassword) {
        this.fallbackPassword = fallbackPassword;
    }

 

    /**
     * Builds a new {@link CallEngineModifyConferenceRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CallEngineModifyConferenceRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(redirectUrl)
            .status(getStatus())
            .redirectFallbackUrl(getRedirectFallbackUrl())
            .redirectMethod(getRedirectMethod())
            .redirectFallbackMethod(getRedirectFallbackMethod())
            .username(getUsername())
            .password(getPassword())
            .fallbackUsername(getFallbackUsername())
            .fallbackPassword(getFallbackPassword());
        return builder;
    }

    /**
     * Class to build instances of {@link CallEngineModifyConferenceRequest}
     */
    public static class Builder {
        private String redirectUrl;
        private StatusEnum status;
        private String redirectFallbackUrl;
        private RedirectMethodEnum redirectMethod;
        private RedirectFallbackMethodEnum redirectFallbackMethod;
        private String username;
        private String password;
        private String fallbackUsername;
        private String fallbackPassword;

        /**
         * Initialization constructor
         */
        public Builder() {
        }

        /**
         * Initialization constructor
         */
        public Builder(String redirectUrl) {
            this.redirectUrl = redirectUrl;
        }

        /**
         * Setter for redirectUrl
         * @param redirectUrl
         * @return Builder
         */
        public Builder redirectUrl(String redirectUrl) {
            this.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * Setter for status
         * @param status
         * @return Builder
         */
        public Builder status(StatusEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for redirectFallbackUrl
         * @param redirectFallbackUrl
         * @return Builder
         */
        public Builder redirectFallbackUrl(String redirectFallbackUrl) {
            this.redirectFallbackUrl = redirectFallbackUrl;
            return this;
        }

        /**
         * Setter for redirectMethod
         * @param redirectMethod
         * @return Builder
         */
        public Builder redirectMethod(RedirectMethodEnum redirectMethod) {
            this.redirectMethod = redirectMethod;
            return this;
        }

        /**
         * Setter for redirectFallbackMethod
         * @param redirectFallbackMethod
         * @return Builder
         */
        public Builder redirectFallbackMethod(RedirectFallbackMethodEnum redirectFallbackMethod) {
            this.redirectFallbackMethod = redirectFallbackMethod;
            return this;
        }

        /**
         * Setter for username
         * @param username
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password
         * @param password
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for fallbackUsername
         * @param fallbackUsername
         * @return Builder
         */
        public Builder fallbackUsername(String fallbackUsername) {
            this.fallbackUsername = fallbackUsername;
            return this;
        }

        /**
         * Setter for fallbackPassword
         * @param fallbackPassword
         * @return Builder
         */
        public Builder fallbackPassword(String fallbackPassword) {
            this.fallbackPassword = fallbackPassword;
            return this;
        }

        /**
         * Builds a new {@link CallEngineModifyConferenceRequest} object using the set fields.
         * @return {@link CallEngineModifyConferenceRequest}
         */
        public CallEngineModifyConferenceRequest build() {
            return new CallEngineModifyConferenceRequest(redirectUrl,
                status,
                redirectFallbackUrl,
                redirectMethod,
                redirectFallbackMethod,
                username,
                password,
                fallbackUsername,
                fallbackPassword);
        }
    }
}
