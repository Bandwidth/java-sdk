/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;

public enum TypeEnum {
    VALIDATION,

    AUTHENTICATIONERROR,

    AUTHORIZATIONERROR,

    INTERNALERROR,

    ERROR,

    RATELIMITEXCEEDED,

    SYSTEMOVERLOADED;


    private static TreeMap<String, TypeEnum> valueMap = new TreeMap<String, TypeEnum>();
    private String value;

    static {
        VALIDATION.value = "validation";
        AUTHENTICATIONERROR.value = "authentication-error";
        AUTHORIZATIONERROR.value = "authorization-error";
        INTERNALERROR.value = "internal-error";
        ERROR.value = "error";
        RATELIMITEXCEEDED.value = "rate-limit-exceeded";
        SYSTEMOVERLOADED.value = "system-overloaded";

        valueMap.put("validation", VALIDATION);
        valueMap.put("authentication-error", AUTHENTICATIONERROR);
        valueMap.put("authorization-error", AUTHORIZATIONERROR);
        valueMap.put("internal-error", INTERNALERROR);
        valueMap.put("error", ERROR);
        valueMap.put("rate-limit-exceeded", RATELIMITEXCEEDED);
        valueMap.put("system-overloaded", SYSTEMOVERLOADED);
    }

    /**
     * Returns the enum member associated with the given string value
     * @return The enum member against the given string value */
    @com.fasterxml.jackson.annotation.JsonCreator
    public static TypeEnum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member
     * @return The string value against enum member */
    @com.fasterxml.jackson.annotation.JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of TypeEnum values to list of string values
     * @param toConvert The list of TypeEnum values to convert
     * @return List of representative string values */
    public static List<String> toValue(List<TypeEnum> toConvert) {
        if(toConvert == null)
            return null;
        List<String> convertedValues = new ArrayList<String>();
        for (TypeEnum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 