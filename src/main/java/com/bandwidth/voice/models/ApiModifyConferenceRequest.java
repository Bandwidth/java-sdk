/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ApiModifyConferenceRequest type.
 */
public class ApiModifyConferenceRequest {
    private StatusEnum status;
    private String redirectUrl;
    private String redirectFallbackUrl;
    private RedirectMethodEnum redirectMethod;
    private RedirectFallbackMethodEnum redirectFallbackMethod;
    private String username;
    private String password;
    private String fallbackUsername;
    private String fallbackPassword;

    /**
     * Default constructor.
     */
    public ApiModifyConferenceRequest() {
    }

    /**
     * Initialization constructor.
     * @param status StatusEnum value for status.
     * @param redirectUrl String value for redirectUrl.
     * @param redirectFallbackUrl String value for redirectFallbackUrl.
     * @param redirectMethod RedirectMethodEnum value for redirectMethod.
     * @param redirectFallbackMethod RedirectFallbackMethodEnum value for redirectFallbackMethod.
     * @param username String value for username.
     * @param password String value for password.
     * @param fallbackUsername String value for fallbackUsername.
     * @param fallbackPassword String value for fallbackPassword.
     */
    public ApiModifyConferenceRequest(
            StatusEnum status,
            String redirectUrl,
            String redirectFallbackUrl,
            RedirectMethodEnum redirectMethod,
            RedirectFallbackMethodEnum redirectFallbackMethod,
            String username,
            String password,
            String fallbackUsername,
            String fallbackPassword) {
        this.status = status;
        this.redirectUrl = redirectUrl;
        this.redirectFallbackUrl = redirectFallbackUrl;
        this.redirectMethod = redirectMethod;
        this.redirectFallbackMethod = redirectFallbackMethod;
        this.username = username;
        this.password = password;
        this.fallbackUsername = fallbackUsername;
        this.fallbackPassword = fallbackPassword;
    }

    /**
     * Getter for Status.
     * @return Returns the StatusEnum
     */
    @JsonGetter("status")
    public StatusEnum getStatus() {
        return this.status;
    }

    /**
     * Setter for Status.
     * @param status Value for StatusEnum
     */
    @JsonSetter("status")
    public void setStatus(StatusEnum status) {
        this.status = status;
    }

    /**
     * Getter for RedirectUrl.
     * @return Returns the String
     */
    @JsonGetter("redirectUrl")
    public String getRedirectUrl() {
        return this.redirectUrl;
    }

    /**
     * Setter for RedirectUrl.
     * @param redirectUrl Value for String
     */
    @JsonSetter("redirectUrl")
    public void setRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
    }

    /**
     * Getter for RedirectFallbackUrl.
     * @return Returns the String
     */
    @JsonGetter("redirectFallbackUrl")
    public String getRedirectFallbackUrl() {
        return this.redirectFallbackUrl;
    }

    /**
     * Setter for RedirectFallbackUrl.
     * @param redirectFallbackUrl Value for String
     */
    @JsonSetter("redirectFallbackUrl")
    public void setRedirectFallbackUrl(String redirectFallbackUrl) {
        this.redirectFallbackUrl = redirectFallbackUrl;
    }

    /**
     * Getter for RedirectMethod.
     * @return Returns the RedirectMethodEnum
     */
    @JsonGetter("redirectMethod")
    public RedirectMethodEnum getRedirectMethod() {
        return this.redirectMethod;
    }

    /**
     * Setter for RedirectMethod.
     * @param redirectMethod Value for RedirectMethodEnum
     */
    @JsonSetter("redirectMethod")
    public void setRedirectMethod(RedirectMethodEnum redirectMethod) {
        this.redirectMethod = redirectMethod;
    }

    /**
     * Getter for RedirectFallbackMethod.
     * @return Returns the RedirectFallbackMethodEnum
     */
    @JsonGetter("redirectFallbackMethod")
    public RedirectFallbackMethodEnum getRedirectFallbackMethod() {
        return this.redirectFallbackMethod;
    }

    /**
     * Setter for RedirectFallbackMethod.
     * @param redirectFallbackMethod Value for RedirectFallbackMethodEnum
     */
    @JsonSetter("redirectFallbackMethod")
    public void setRedirectFallbackMethod(RedirectFallbackMethodEnum redirectFallbackMethod) {
        this.redirectFallbackMethod = redirectFallbackMethod;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     * @return Returns the String
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for Password.
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for FallbackUsername.
     * @return Returns the String
     */
    @JsonGetter("fallbackUsername")
    public String getFallbackUsername() {
        return this.fallbackUsername;
    }

    /**
     * Setter for FallbackUsername.
     * @param fallbackUsername Value for String
     */
    @JsonSetter("fallbackUsername")
    public void setFallbackUsername(String fallbackUsername) {
        this.fallbackUsername = fallbackUsername;
    }

    /**
     * Getter for FallbackPassword.
     * @return Returns the String
     */
    @JsonGetter("fallbackPassword")
    public String getFallbackPassword() {
        return this.fallbackPassword;
    }

    /**
     * Setter for FallbackPassword.
     * @param fallbackPassword Value for String
     */
    @JsonSetter("fallbackPassword")
    public void setFallbackPassword(String fallbackPassword) {
        this.fallbackPassword = fallbackPassword;
    }

    /**
     * Converts this ApiModifyConferenceRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiModifyConferenceRequest [" + "status=" + status + ", redirectUrl=" + redirectUrl
                + ", redirectFallbackUrl=" + redirectFallbackUrl + ", redirectMethod="
                + redirectMethod + ", redirectFallbackMethod=" + redirectFallbackMethod
                + ", username=" + username + ", password=" + password + ", fallbackUsername="
                + fallbackUsername + ", fallbackPassword=" + fallbackPassword + "]";
    }

    /**
     * Builds a new {@link ApiModifyConferenceRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiModifyConferenceRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .status(getStatus())
                .redirectUrl(getRedirectUrl())
                .redirectFallbackUrl(getRedirectFallbackUrl())
                .redirectMethod(getRedirectMethod())
                .redirectFallbackMethod(getRedirectFallbackMethod())
                .username(getUsername())
                .password(getPassword())
                .fallbackUsername(getFallbackUsername())
                .fallbackPassword(getFallbackPassword());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiModifyConferenceRequest}.
     */
    public static class Builder {
        private StatusEnum status;
        private String redirectUrl;
        private String redirectFallbackUrl;
        private RedirectMethodEnum redirectMethod;
        private RedirectFallbackMethodEnum redirectFallbackMethod;
        private String username;
        private String password;
        private String fallbackUsername;
        private String fallbackPassword;



        /**
         * Setter for status.
         * @param status StatusEnum value for status.
         * @return Builder
         */
        public Builder status(StatusEnum status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for redirectUrl.
         * @param redirectUrl String value for redirectUrl.
         * @return Builder
         */
        public Builder redirectUrl(String redirectUrl) {
            this.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * Setter for redirectFallbackUrl.
         * @param redirectFallbackUrl String value for redirectFallbackUrl.
         * @return Builder
         */
        public Builder redirectFallbackUrl(String redirectFallbackUrl) {
            this.redirectFallbackUrl = redirectFallbackUrl;
            return this;
        }

        /**
         * Setter for redirectMethod.
         * @param redirectMethod RedirectMethodEnum value for redirectMethod.
         * @return Builder
         */
        public Builder redirectMethod(RedirectMethodEnum redirectMethod) {
            this.redirectMethod = redirectMethod;
            return this;
        }

        /**
         * Setter for redirectFallbackMethod.
         * @param redirectFallbackMethod RedirectFallbackMethodEnum value for redirectFallbackMethod.
         * @return Builder
         */
        public Builder redirectFallbackMethod(RedirectFallbackMethodEnum redirectFallbackMethod) {
            this.redirectFallbackMethod = redirectFallbackMethod;
            return this;
        }

        /**
         * Setter for username.
         * @param username String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password.
         * @param password String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for fallbackUsername.
         * @param fallbackUsername String value for fallbackUsername.
         * @return Builder
         */
        public Builder fallbackUsername(String fallbackUsername) {
            this.fallbackUsername = fallbackUsername;
            return this;
        }

        /**
         * Setter for fallbackPassword.
         * @param fallbackPassword String value for fallbackPassword.
         * @return Builder
         */
        public Builder fallbackPassword(String fallbackPassword) {
            this.fallbackPassword = fallbackPassword;
            return this;
        }

        /**
         * Builds a new {@link ApiModifyConferenceRequest} object using the set fields.
         * @return {@link ApiModifyConferenceRequest}
         */
        public ApiModifyConferenceRequest build() {
            return new ApiModifyConferenceRequest(status, redirectUrl, redirectFallbackUrl,
                    redirectMethod, redirectFallbackMethod, username, password, fallbackUsername,
                    fallbackPassword);
        }
    }
}
