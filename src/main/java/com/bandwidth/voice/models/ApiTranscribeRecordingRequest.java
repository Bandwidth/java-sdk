/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;


/**
 * This is a model class for ApiTranscribeRecordingRequest type.
 */
public class ApiTranscribeRecordingRequest {
    /**
     * Default constructor
     */
    public ApiTranscribeRecordingRequest() {
    }

    /**
     * Initialization constructor.
     * @param callbackUrl
     * @param callbackMethod
     * @param username
     * @param password
     * @param tag
     * @param callbackTimeout
     */
    public ApiTranscribeRecordingRequest(
            String callbackUrl,
            CallbackMethodEnum callbackMethod,
            String username,
            String password,
            String tag,
            Double callbackTimeout) {
        this.callbackUrl = callbackUrl;
        this.callbackMethod = callbackMethod;
        this.username = username;
        this.password = password;
        this.tag = tag;
        this.callbackTimeout = callbackTimeout;
    }

    private String callbackUrl;
    private CallbackMethodEnum callbackMethod;
    private String username;
    private String password;
    private String tag;
    private Double callbackTimeout;
    /**
     * Getter for CallbackUrl.
     */
    @JsonGetter("callbackUrl")
    public String getCallbackUrl() {
        return this.callbackUrl;
    }
    /**
     * Setter for CallbackUrl.
     */
    @JsonSetter("callbackUrl")
    public void setCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
    }

    /**
     * Getter for CallbackMethod.
     */
    @JsonGetter("callbackMethod")
    public CallbackMethodEnum getCallbackMethod() {
        return this.callbackMethod;
    }
    /**
     * Setter for CallbackMethod.
     */
    @JsonSetter("callbackMethod")
    public void setCallbackMethod(CallbackMethodEnum callbackMethod) {
        this.callbackMethod = callbackMethod;
    }

    /**
     * Getter for Username.
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }
    /**
     * Setter for Username.
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }
    /**
     * Setter for Password.
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for Tag.
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }
    /**
     * Setter for Tag.
     */
    @JsonSetter("tag")
    public void setTag(String tag) {
        this.tag = tag;
    }

    /**
     * Getter for CallbackTimeout.
     */
    @JsonGetter("callbackTimeout")
    public Double getCallbackTimeout() {
        return this.callbackTimeout;
    }
    /**
     * Setter for CallbackTimeout.
     */
    @JsonSetter("callbackTimeout")
    public void setCallbackTimeout(Double callbackTimeout) {
        this.callbackTimeout = callbackTimeout;
    }

 

    /**
     * Builds a new {@link ApiTranscribeRecordingRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiTranscribeRecordingRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
            .callbackUrl(getCallbackUrl())
            .callbackMethod(getCallbackMethod())
            .username(getUsername())
            .password(getPassword())
            .tag(getTag())
            .callbackTimeout(getCallbackTimeout());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiTranscribeRecordingRequest}
     */
    public static class Builder {
        private String callbackUrl;
        private CallbackMethodEnum callbackMethod;
        private String username;
        private String password;
        private String tag;
        private Double callbackTimeout;



        /**
         * Setter for callbackUrl
         * @param callbackUrl
         * @return Builder
         */
        public Builder callbackUrl(String callbackUrl) {
            this.callbackUrl = callbackUrl;
            return this;
        }

        /**
         * Setter for callbackMethod
         * @param callbackMethod
         * @return Builder
         */
        public Builder callbackMethod(CallbackMethodEnum callbackMethod) {
            this.callbackMethod = callbackMethod;
            return this;
        }

        /**
         * Setter for username
         * @param username
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password
         * @param password
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for tag
         * @param tag
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Setter for callbackTimeout
         * @param callbackTimeout
         * @return Builder
         */
        public Builder callbackTimeout(Double callbackTimeout) {
            this.callbackTimeout = callbackTimeout;
            return this;
        }

        /**
         * Builds a new {@link ApiTranscribeRecordingRequest} object using the set fields.
         * @return {@link ApiTranscribeRecordingRequest}
         */
        public ApiTranscribeRecordingRequest build() {
            return new ApiTranscribeRecordingRequest(callbackUrl,
                callbackMethod,
                username,
                password,
                tag,
                callbackTimeout);
        }
    }
}
