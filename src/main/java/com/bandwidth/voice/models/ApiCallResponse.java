/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.bandwidth.voice.models;

import com.bandwidth.DateTimeHelper;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDateTime;

/**
 * This is a model class for ApiCallResponse type.
 */
public class ApiCallResponse {
    private String accountId;
    private String callId;
    private String applicationId;
    private String to;
    private String from;
    private LocalDateTime startTime;
    private String callUrl;
    private Double callTimeout;
    private Double callbackTimeout;
    private String answerUrl;
    private AnswerMethodEnum answerMethod;
    private String answerFallbackUrl;
    private AnswerFallbackMethodEnum answerFallbackMethod;
    private String disconnectUrl;
    private DisconnectMethodEnum disconnectMethod;
    private String username;
    private String password;
    private String fallbackUsername;
    private String fallbackPassword;
    private String tag;

    /**
     * Default constructor.
     */
    public ApiCallResponse() {
    }

    /**
     * Initialization constructor.
     * @param accountId String value for accountId.
     * @param callId String value for callId.
     * @param applicationId String value for applicationId.
     * @param to String value for to.
     * @param from String value for from.
     * @param callUrl String value for callUrl.
     * @param answerUrl String value for answerUrl.
     * @param answerMethod AnswerMethodEnum value for answerMethod.
     * @param disconnectMethod DisconnectMethodEnum value for disconnectMethod.
     * @param startTime LocalDateTime value for startTime.
     * @param callTimeout Double value for callTimeout.
     * @param callbackTimeout Double value for callbackTimeout.
     * @param answerFallbackUrl String value for answerFallbackUrl.
     * @param answerFallbackMethod AnswerFallbackMethodEnum value for answerFallbackMethod.
     * @param disconnectUrl String value for disconnectUrl.
     * @param username String value for username.
     * @param password String value for password.
     * @param fallbackUsername String value for fallbackUsername.
     * @param fallbackPassword String value for fallbackPassword.
     * @param tag String value for tag.
     */
    public ApiCallResponse(
            String accountId,
            String callId,
            String applicationId,
            String to,
            String from,
            String callUrl,
            String answerUrl,
            AnswerMethodEnum answerMethod,
            DisconnectMethodEnum disconnectMethod,
            LocalDateTime startTime,
            Double callTimeout,
            Double callbackTimeout,
            String answerFallbackUrl,
            AnswerFallbackMethodEnum answerFallbackMethod,
            String disconnectUrl,
            String username,
            String password,
            String fallbackUsername,
            String fallbackPassword,
            String tag) {
        this.accountId = accountId;
        this.callId = callId;
        this.applicationId = applicationId;
        this.to = to;
        this.from = from;
        this.startTime = startTime;
        this.callUrl = callUrl;
        this.callTimeout = callTimeout;
        this.callbackTimeout = callbackTimeout;
        this.answerUrl = answerUrl;
        this.answerMethod = answerMethod;
        this.answerFallbackUrl = answerFallbackUrl;
        this.answerFallbackMethod = answerFallbackMethod;
        this.disconnectUrl = disconnectUrl;
        this.disconnectMethod = disconnectMethod;
        this.username = username;
        this.password = password;
        this.fallbackUsername = fallbackUsername;
        this.fallbackPassword = fallbackPassword;
        this.tag = tag;
    }

    /**
     * Getter for AccountId.
     * @return Returns the String
     */
    @JsonGetter("accountId")
    public String getAccountId() {
        return this.accountId;
    }

    /**
     * Setter for AccountId.
     * @param accountId Value for String
     */
    @JsonSetter("accountId")
    public void setAccountId(String accountId) {
        this.accountId = accountId;
    }

    /**
     * Getter for CallId.
     * @return Returns the String
     */
    @JsonGetter("callId")
    public String getCallId() {
        return this.callId;
    }

    /**
     * Setter for CallId.
     * @param callId Value for String
     */
    @JsonSetter("callId")
    public void setCallId(String callId) {
        this.callId = callId;
    }

    /**
     * Getter for ApplicationId.
     * @return Returns the String
     */
    @JsonGetter("applicationId")
    public String getApplicationId() {
        return this.applicationId;
    }

    /**
     * Setter for ApplicationId.
     * @param applicationId Value for String
     */
    @JsonSetter("applicationId")
    public void setApplicationId(String applicationId) {
        this.applicationId = applicationId;
    }

    /**
     * Getter for To.
     * @return Returns the String
     */
    @JsonGetter("to")
    public String getTo() {
        return this.to;
    }

    /**
     * Setter for To.
     * @param to Value for String
     */
    @JsonSetter("to")
    public void setTo(String to) {
        this.to = to;
    }

    /**
     * Getter for From.
     * @return Returns the String
     */
    @JsonGetter("from")
    public String getFrom() {
        return this.from;
    }

    /**
     * Setter for From.
     * @param from Value for String
     */
    @JsonSetter("from")
    public void setFrom(String from) {
        this.from = from;
    }

    /**
     * Getter for StartTime.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("startTime")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for StartTime.
     * @param startTime Value for LocalDateTime
     */
    @JsonSetter("startTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartTime(LocalDateTime startTime) {
        this.startTime = startTime;
    }

    /**
     * Getter for CallUrl.
     * @return Returns the String
     */
    @JsonGetter("callUrl")
    public String getCallUrl() {
        return this.callUrl;
    }

    /**
     * Setter for CallUrl.
     * @param callUrl Value for String
     */
    @JsonSetter("callUrl")
    public void setCallUrl(String callUrl) {
        this.callUrl = callUrl;
    }

    /**
     * Getter for CallTimeout.
     * @return Returns the Double
     */
    @JsonGetter("callTimeout")
    public Double getCallTimeout() {
        return this.callTimeout;
    }

    /**
     * Setter for CallTimeout.
     * @param callTimeout Value for Double
     */
    @JsonSetter("callTimeout")
    public void setCallTimeout(Double callTimeout) {
        this.callTimeout = callTimeout;
    }

    /**
     * Getter for CallbackTimeout.
     * @return Returns the Double
     */
    @JsonGetter("callbackTimeout")
    public Double getCallbackTimeout() {
        return this.callbackTimeout;
    }

    /**
     * Setter for CallbackTimeout.
     * @param callbackTimeout Value for Double
     */
    @JsonSetter("callbackTimeout")
    public void setCallbackTimeout(Double callbackTimeout) {
        this.callbackTimeout = callbackTimeout;
    }

    /**
     * Getter for AnswerUrl.
     * @return Returns the String
     */
    @JsonGetter("answerUrl")
    public String getAnswerUrl() {
        return this.answerUrl;
    }

    /**
     * Setter for AnswerUrl.
     * @param answerUrl Value for String
     */
    @JsonSetter("answerUrl")
    public void setAnswerUrl(String answerUrl) {
        this.answerUrl = answerUrl;
    }

    /**
     * Getter for AnswerMethod.
     * @return Returns the AnswerMethodEnum
     */
    @JsonGetter("answerMethod")
    public AnswerMethodEnum getAnswerMethod() {
        return this.answerMethod;
    }

    /**
     * Setter for AnswerMethod.
     * @param answerMethod Value for AnswerMethodEnum
     */
    @JsonSetter("answerMethod")
    public void setAnswerMethod(AnswerMethodEnum answerMethod) {
        this.answerMethod = answerMethod;
    }

    /**
     * Getter for AnswerFallbackUrl.
     * @return Returns the String
     */
    @JsonGetter("answerFallbackUrl")
    public String getAnswerFallbackUrl() {
        return this.answerFallbackUrl;
    }

    /**
     * Setter for AnswerFallbackUrl.
     * @param answerFallbackUrl Value for String
     */
    @JsonSetter("answerFallbackUrl")
    public void setAnswerFallbackUrl(String answerFallbackUrl) {
        this.answerFallbackUrl = answerFallbackUrl;
    }

    /**
     * Getter for AnswerFallbackMethod.
     * @return Returns the AnswerFallbackMethodEnum
     */
    @JsonGetter("answerFallbackMethod")
    public AnswerFallbackMethodEnum getAnswerFallbackMethod() {
        return this.answerFallbackMethod;
    }

    /**
     * Setter for AnswerFallbackMethod.
     * @param answerFallbackMethod Value for AnswerFallbackMethodEnum
     */
    @JsonSetter("answerFallbackMethod")
    public void setAnswerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
        this.answerFallbackMethod = answerFallbackMethod;
    }

    /**
     * Getter for DisconnectUrl.
     * @return Returns the String
     */
    @JsonGetter("disconnectUrl")
    public String getDisconnectUrl() {
        return this.disconnectUrl;
    }

    /**
     * Setter for DisconnectUrl.
     * @param disconnectUrl Value for String
     */
    @JsonSetter("disconnectUrl")
    public void setDisconnectUrl(String disconnectUrl) {
        this.disconnectUrl = disconnectUrl;
    }

    /**
     * Getter for DisconnectMethod.
     * @return Returns the DisconnectMethodEnum
     */
    @JsonGetter("disconnectMethod")
    public DisconnectMethodEnum getDisconnectMethod() {
        return this.disconnectMethod;
    }

    /**
     * Setter for DisconnectMethod.
     * @param disconnectMethod Value for DisconnectMethodEnum
     */
    @JsonSetter("disconnectMethod")
    public void setDisconnectMethod(DisconnectMethodEnum disconnectMethod) {
        this.disconnectMethod = disconnectMethod;
    }

    /**
     * Getter for Username.
     * @return Returns the String
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }

    /**
     * Setter for Username.
     * @param username Value for String
     */
    @JsonSetter("username")
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Getter for Password.
     * @return Returns the String
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for Password.
     * @param password Value for String
     */
    @JsonSetter("password")
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for FallbackUsername.
     * @return Returns the String
     */
    @JsonGetter("fallbackUsername")
    public String getFallbackUsername() {
        return this.fallbackUsername;
    }

    /**
     * Setter for FallbackUsername.
     * @param fallbackUsername Value for String
     */
    @JsonSetter("fallbackUsername")
    public void setFallbackUsername(String fallbackUsername) {
        this.fallbackUsername = fallbackUsername;
    }

    /**
     * Getter for FallbackPassword.
     * @return Returns the String
     */
    @JsonGetter("fallbackPassword")
    public String getFallbackPassword() {
        return this.fallbackPassword;
    }

    /**
     * Setter for FallbackPassword.
     * @param fallbackPassword Value for String
     */
    @JsonSetter("fallbackPassword")
    public void setFallbackPassword(String fallbackPassword) {
        this.fallbackPassword = fallbackPassword;
    }

    /**
     * Getter for Tag.
     * @return Returns the String
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }

    /**
     * Setter for Tag.
     * @param tag Value for String
     */
    @JsonSetter("tag")
    public void setTag(String tag) {
        this.tag = tag;
    }

    /**
     * Converts this ApiCallResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ApiCallResponse [" + "accountId=" + accountId + ", callId=" + callId
                + ", applicationId=" + applicationId + ", to=" + to + ", from=" + from
                + ", callUrl=" + callUrl + ", answerUrl=" + answerUrl + ", answerMethod="
                + answerMethod + ", disconnectMethod=" + disconnectMethod + ", startTime="
                + startTime + ", callTimeout=" + callTimeout + ", callbackTimeout="
                + callbackTimeout + ", answerFallbackUrl=" + answerFallbackUrl
                + ", answerFallbackMethod=" + answerFallbackMethod + ", disconnectUrl="
                + disconnectUrl + ", username=" + username + ", password=" + password
                + ", fallbackUsername=" + fallbackUsername + ", fallbackPassword="
                + fallbackPassword + ", tag=" + tag + "]";
    }

    /**
     * Builds a new {@link ApiCallResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiCallResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId, callId, applicationId, to, from, callUrl,
                answerUrl, answerMethod, disconnectMethod)
                .startTime(getStartTime())
                .callTimeout(getCallTimeout())
                .callbackTimeout(getCallbackTimeout())
                .answerFallbackUrl(getAnswerFallbackUrl())
                .answerFallbackMethod(getAnswerFallbackMethod())
                .disconnectUrl(getDisconnectUrl())
                .username(getUsername())
                .password(getPassword())
                .fallbackUsername(getFallbackUsername())
                .fallbackPassword(getFallbackPassword())
                .tag(getTag());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiCallResponse}.
     */
    public static class Builder {
        private String accountId;
        private String callId;
        private String applicationId;
        private String to;
        private String from;
        private String callUrl;
        private String answerUrl;
        private AnswerMethodEnum answerMethod;
        private DisconnectMethodEnum disconnectMethod;
        private LocalDateTime startTime;
        private Double callTimeout;
        private Double callbackTimeout;
        private String answerFallbackUrl;
        private AnswerFallbackMethodEnum answerFallbackMethod;
        private String disconnectUrl;
        private String username;
        private String password;
        private String fallbackUsername;
        private String fallbackPassword;
        private String tag;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param accountId String value for accountId.
         * @param callId String value for callId.
         * @param applicationId String value for applicationId.
         * @param to String value for to.
         * @param from String value for from.
         * @param callUrl String value for callUrl.
         * @param answerUrl String value for answerUrl.
         * @param answerMethod AnswerMethodEnum value for answerMethod.
         * @param disconnectMethod DisconnectMethodEnum value for disconnectMethod.
         */
        public Builder(String accountId,
                String callId,
                String applicationId,
                String to,
                String from,
                String callUrl,
                String answerUrl,
                AnswerMethodEnum answerMethod,
                DisconnectMethodEnum disconnectMethod) {
            this.accountId = accountId;
            this.callId = callId;
            this.applicationId = applicationId;
            this.to = to;
            this.from = from;
            this.callUrl = callUrl;
            this.answerUrl = answerUrl;
            this.answerMethod = answerMethod;
            this.disconnectMethod = disconnectMethod;
        }

        /**
         * Setter for accountId.
         * @param accountId String value for accountId.
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for callId.
         * @param callId String value for callId.
         * @return Builder
         */
        public Builder callId(String callId) {
            this.callId = callId;
            return this;
        }

        /**
         * Setter for applicationId.
         * @param applicationId String value for applicationId.
         * @return Builder
         */
        public Builder applicationId(String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        /**
         * Setter for to.
         * @param to String value for to.
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for from.
         * @param from String value for from.
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for callUrl.
         * @param callUrl String value for callUrl.
         * @return Builder
         */
        public Builder callUrl(String callUrl) {
            this.callUrl = callUrl;
            return this;
        }

        /**
         * Setter for answerUrl.
         * @param answerUrl String value for answerUrl.
         * @return Builder
         */
        public Builder answerUrl(String answerUrl) {
            this.answerUrl = answerUrl;
            return this;
        }

        /**
         * Setter for answerMethod.
         * @param answerMethod AnswerMethodEnum value for answerMethod.
         * @return Builder
         */
        public Builder answerMethod(AnswerMethodEnum answerMethod) {
            this.answerMethod = answerMethod;
            return this;
        }

        /**
         * Setter for disconnectMethod.
         * @param disconnectMethod DisconnectMethodEnum value for disconnectMethod.
         * @return Builder
         */
        public Builder disconnectMethod(DisconnectMethodEnum disconnectMethod) {
            this.disconnectMethod = disconnectMethod;
            return this;
        }

        /**
         * Setter for startTime.
         * @param startTime LocalDateTime value for startTime.
         * @return Builder
         */
        public Builder startTime(LocalDateTime startTime) {
            this.startTime = startTime;
            return this;
        }

        /**
         * Setter for callTimeout.
         * @param callTimeout Double value for callTimeout.
         * @return Builder
         */
        public Builder callTimeout(Double callTimeout) {
            this.callTimeout = callTimeout;
            return this;
        }

        /**
         * Setter for callbackTimeout.
         * @param callbackTimeout Double value for callbackTimeout.
         * @return Builder
         */
        public Builder callbackTimeout(Double callbackTimeout) {
            this.callbackTimeout = callbackTimeout;
            return this;
        }

        /**
         * Setter for answerFallbackUrl.
         * @param answerFallbackUrl String value for answerFallbackUrl.
         * @return Builder
         */
        public Builder answerFallbackUrl(String answerFallbackUrl) {
            this.answerFallbackUrl = answerFallbackUrl;
            return this;
        }

        /**
         * Setter for answerFallbackMethod.
         * @param answerFallbackMethod AnswerFallbackMethodEnum value for answerFallbackMethod.
         * @return Builder
         */
        public Builder answerFallbackMethod(AnswerFallbackMethodEnum answerFallbackMethod) {
            this.answerFallbackMethod = answerFallbackMethod;
            return this;
        }

        /**
         * Setter for disconnectUrl.
         * @param disconnectUrl String value for disconnectUrl.
         * @return Builder
         */
        public Builder disconnectUrl(String disconnectUrl) {
            this.disconnectUrl = disconnectUrl;
            return this;
        }

        /**
         * Setter for username.
         * @param username String value for username.
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password.
         * @param password String value for password.
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for fallbackUsername.
         * @param fallbackUsername String value for fallbackUsername.
         * @return Builder
         */
        public Builder fallbackUsername(String fallbackUsername) {
            this.fallbackUsername = fallbackUsername;
            return this;
        }

        /**
         * Setter for fallbackPassword.
         * @param fallbackPassword String value for fallbackPassword.
         * @return Builder
         */
        public Builder fallbackPassword(String fallbackPassword) {
            this.fallbackPassword = fallbackPassword;
            return this;
        }

        /**
         * Setter for tag.
         * @param tag String value for tag.
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Builds a new {@link ApiCallResponse} object using the set fields.
         * @return {@link ApiCallResponse}
         */
        public ApiCallResponse build() {
            return new ApiCallResponse(accountId, callId, applicationId, to, from, callUrl,
                    answerUrl, answerMethod, disconnectMethod, startTime, callTimeout,
                    callbackTimeout, answerFallbackUrl, answerFallbackMethod, disconnectUrl,
                    username, password, fallbackUsername, fallbackPassword, tag);
        }
    }
}
