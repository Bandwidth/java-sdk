/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.voice.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.bandwidth.DateTimeHelper;
import java.time.LocalDateTime;


/**
 * This is a model class for ApiCallResponse type.
 */
public class ApiCallResponse {
    /**
     * Default constructor
     */
    public ApiCallResponse() {
    }

    /**
     * Initialization constructor.
     * @param accountId
     * @param callId
     * @param applicationId
     * @param to
     * @param from
     * @param callUrl
     * @param answerUrl
     * @param answerMethod
     * @param disconnectMethod
     * @param startTime
     * @param callTimeout
     * @param disconnectUrl
     * @param username
     * @param password
     * @param tag
     */
    public ApiCallResponse(
            String accountId,
            String callId,
            String applicationId,
            String to,
            String from,
            String callUrl,
            String answerUrl,
            AnswerMethodEnum answerMethod,
            DisconnectMethodEnum disconnectMethod,
            LocalDateTime startTime,
            Double callTimeout,
            String disconnectUrl,
            String username,
            String password,
            String tag) {
        this.accountId = accountId;
        this.callId = callId;
        this.applicationId = applicationId;
        this.to = to;
        this.from = from;
        this.startTime = startTime;
        this.callUrl = callUrl;
        this.callTimeout = callTimeout;
        this.answerUrl = answerUrl;
        this.answerMethod = answerMethod;
        this.disconnectUrl = disconnectUrl;
        this.disconnectMethod = disconnectMethod;
        this.username = username;
        this.password = password;
        this.tag = tag;
    }

    private String accountId;
    private String callId;
    private String applicationId;
    private String to;
    private String from;
    private LocalDateTime startTime;
    private String callUrl;
    private Double callTimeout;
    private String answerUrl;
    private AnswerMethodEnum answerMethod;
    private String disconnectUrl;
    private DisconnectMethodEnum disconnectMethod;
    private String username;
    private String password;
    private String tag;
    /**
     * Getter for AccountId.
     */
    @JsonGetter("accountId")
    public String getAccountId() {
        return this.accountId;
    }
    /**
     * Setter for AccountId.
     */
    @JsonSetter("accountId")
    public void setAccountId(String value) {
        this.accountId = value;
    }

    /**
     * Getter for CallId.
     */
    @JsonGetter("callId")
    public String getCallId() {
        return this.callId;
    }
    /**
     * Setter for CallId.
     */
    @JsonSetter("callId")
    public void setCallId(String value) {
        this.callId = value;
    }

    /**
     * Getter for ApplicationId.
     */
    @JsonGetter("applicationId")
    public String getApplicationId() {
        return this.applicationId;
    }
    /**
     * Setter for ApplicationId.
     */
    @JsonSetter("applicationId")
    public void setApplicationId(String value) {
        this.applicationId = value;
    }

    /**
     * Getter for To.
     */
    @JsonGetter("to")
    public String getTo() {
        return this.to;
    }
    /**
     * Setter for To.
     */
    @JsonSetter("to")
    public void setTo(String value) {
        this.to = value;
    }

    /**
     * Getter for From.
     */
    @JsonGetter("from")
    public String getFrom() {
        return this.from;
    }
    /**
     * Setter for From.
     */
    @JsonSetter("from")
    public void setFrom(String value) {
        this.from = value;
    }

    /**
     * Getter for StartTime.
     */
    @JsonGetter("startTime")
    @JsonSerialize(using=DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getStartTime() {
        return this.startTime;
    }
    /**
     * Setter for StartTime.
     */
    @JsonSetter("startTime")
    @JsonDeserialize(using=DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartTime(LocalDateTime value) {
        this.startTime = value;
    }

    /**
     * Getter for CallUrl.
     */
    @JsonGetter("callUrl")
    public String getCallUrl() {
        return this.callUrl;
    }
    /**
     * Setter for CallUrl.
     */
    @JsonSetter("callUrl")
    public void setCallUrl(String value) {
        this.callUrl = value;
    }

    /**
     * Getter for CallTimeout.
     */
    @JsonGetter("callTimeout")
    public Double getCallTimeout() {
        return this.callTimeout;
    }
    /**
     * Setter for CallTimeout.
     */
    @JsonSetter("callTimeout")
    public void setCallTimeout(Double value) {
        this.callTimeout = value;
    }

    /**
     * Getter for AnswerUrl.
     */
    @JsonGetter("answerUrl")
    public String getAnswerUrl() {
        return this.answerUrl;
    }
    /**
     * Setter for AnswerUrl.
     */
    @JsonSetter("answerUrl")
    public void setAnswerUrl(String value) {
        this.answerUrl = value;
    }

    /**
     * Getter for AnswerMethod.
     */
    @JsonGetter("answerMethod")
    public AnswerMethodEnum getAnswerMethod() {
        return this.answerMethod;
    }
    /**
     * Setter for AnswerMethod.
     */
    @JsonSetter("answerMethod")
    public void setAnswerMethod(AnswerMethodEnum value) {
        this.answerMethod = value;
    }

    /**
     * Getter for DisconnectUrl.
     */
    @JsonGetter("disconnectUrl")
    public String getDisconnectUrl() {
        return this.disconnectUrl;
    }
    /**
     * Setter for DisconnectUrl.
     */
    @JsonSetter("disconnectUrl")
    public void setDisconnectUrl(String value) {
        this.disconnectUrl = value;
    }

    /**
     * Getter for DisconnectMethod.
     */
    @JsonGetter("disconnectMethod")
    public DisconnectMethodEnum getDisconnectMethod() {
        return this.disconnectMethod;
    }
    /**
     * Setter for DisconnectMethod.
     */
    @JsonSetter("disconnectMethod")
    public void setDisconnectMethod(DisconnectMethodEnum value) {
        this.disconnectMethod = value;
    }

    /**
     * Getter for Username.
     */
    @JsonGetter("username")
    public String getUsername() {
        return this.username;
    }
    /**
     * Setter for Username.
     */
    @JsonSetter("username")
    public void setUsername(String value) {
        this.username = value;
    }

    /**
     * Getter for Password.
     */
    @JsonGetter("password")
    public String getPassword() {
        return this.password;
    }
    /**
     * Setter for Password.
     */
    @JsonSetter("password")
    public void setPassword(String value) {
        this.password = value;
    }

    /**
     * Getter for Tag.
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }
    /**
     * Setter for Tag.
     */
    @JsonSetter("tag")
    public void setTag(String value) {
        this.tag = value;
    }

 

    /**
     * Builds a new {@link ApiCallResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ApiCallResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountId,
            callId,
            applicationId,
            to,
            from,
            callUrl,
            answerUrl,
            answerMethod,
            disconnectMethod)
            .startTime(getStartTime())
            .callTimeout(getCallTimeout())
            .disconnectUrl(getDisconnectUrl())
            .username(getUsername())
            .password(getPassword())
            .tag(getTag());
        return builder;
    }

    /**
     * Class to build instances of {@link ApiCallResponse}
     */
    public static class Builder {
        private String accountId;
        private String callId;
        private String applicationId;
        private String to;
        private String from;
        private String callUrl;
        private String answerUrl;
        private AnswerMethodEnum answerMethod;
        private DisconnectMethodEnum disconnectMethod;
        private LocalDateTime startTime;
        private Double callTimeout;
        private String disconnectUrl;
        private String username;
        private String password;
        private String tag;

        /**
         * Initialization constructor
         */
        public Builder() {
        }

        /**
         * Initialization constructor
         */
        public Builder(String accountId,
                String callId,
                String applicationId,
                String to,
                String from,
                String callUrl,
                String answerUrl,
                AnswerMethodEnum answerMethod,
                DisconnectMethodEnum disconnectMethod) {
            this.accountId = accountId;
            this.callId = callId;
            this.applicationId = applicationId;
            this.to = to;
            this.from = from;
            this.callUrl = callUrl;
            this.answerUrl = answerUrl;
            this.answerMethod = answerMethod;
            this.disconnectMethod = disconnectMethod;
        }

        /**
         * Setter for accountId
         * @param accountId
         * @return Builder
         */
        public Builder accountId(String accountId) {
            this.accountId = accountId;
            return this;
        }

        /**
         * Setter for callId
         * @param callId
         * @return Builder
         */
        public Builder callId(String callId) {
            this.callId = callId;
            return this;
        }

        /**
         * Setter for applicationId
         * @param applicationId
         * @return Builder
         */
        public Builder applicationId(String applicationId) {
            this.applicationId = applicationId;
            return this;
        }

        /**
         * Setter for to
         * @param to
         * @return Builder
         */
        public Builder to(String to) {
            this.to = to;
            return this;
        }

        /**
         * Setter for from
         * @param from
         * @return Builder
         */
        public Builder from(String from) {
            this.from = from;
            return this;
        }

        /**
         * Setter for callUrl
         * @param callUrl
         * @return Builder
         */
        public Builder callUrl(String callUrl) {
            this.callUrl = callUrl;
            return this;
        }

        /**
         * Setter for answerUrl
         * @param answerUrl
         * @return Builder
         */
        public Builder answerUrl(String answerUrl) {
            this.answerUrl = answerUrl;
            return this;
        }

        /**
         * Setter for answerMethod
         * @param answerMethod
         * @return Builder
         */
        public Builder answerMethod(AnswerMethodEnum answerMethod) {
            this.answerMethod = answerMethod;
            return this;
        }

        /**
         * Setter for disconnectMethod
         * @param disconnectMethod
         * @return Builder
         */
        public Builder disconnectMethod(DisconnectMethodEnum disconnectMethod) {
            this.disconnectMethod = disconnectMethod;
            return this;
        }

        /**
         * Setter for startTime
         * @param startTime
         * @return Builder
         */
        public Builder startTime(LocalDateTime startTime) {
            this.startTime = startTime;
            return this;
        }

        /**
         * Setter for callTimeout
         * @param callTimeout
         * @return Builder
         */
        public Builder callTimeout(Double callTimeout) {
            this.callTimeout = callTimeout;
            return this;
        }

        /**
         * Setter for disconnectUrl
         * @param disconnectUrl
         * @return Builder
         */
        public Builder disconnectUrl(String disconnectUrl) {
            this.disconnectUrl = disconnectUrl;
            return this;
        }

        /**
         * Setter for username
         * @param username
         * @return Builder
         */
        public Builder username(String username) {
            this.username = username;
            return this;
        }

        /**
         * Setter for password
         * @param password
         * @return Builder
         */
        public Builder password(String password) {
            this.password = password;
            return this;
        }

        /**
         * Setter for tag
         * @param tag
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Builds a new {@link ApiCallResponse} object using the set fields.
         * @return {@link ApiCallResponse}
         */
        public ApiCallResponse build() {
            return new ApiCallResponse(accountId,
                callId,
                applicationId,
                to,
                from,
                callUrl,
                answerUrl,
                answerMethod,
                disconnectMethod,
                startTime,
                callTimeout,
                disconnectUrl,
                username,
                password,
                tag);
        }
    }
}
