/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.bandwidth.webrtc.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Participant type.
 */
public class Participant {
    private String id;
    private String callbackUrl;
    private List<PublishPermissionEnum> publishPermissions;
    private List<String> sessions;
    private Subscriptions subscriptions;
    private String tag;

    /**
     * Default constructor.
     */
    public Participant() {
    }

    /**
     * Initialization constructor.
     * @param id String value for id.
     * @param callbackUrl String value for callbackUrl.
     * @param publishPermissions List of PublishPermissionEnum value for publishPermissions.
     * @param sessions List of String value for sessions.
     * @param subscriptions Subscriptions value for subscriptions.
     * @param tag String value for tag.
     */
    public Participant(
            String id,
            String callbackUrl,
            List<PublishPermissionEnum> publishPermissions,
            List<String> sessions,
            Subscriptions subscriptions,
            String tag) {
        this.id = id;
        this.callbackUrl = callbackUrl;
        this.publishPermissions = publishPermissions;
        this.sessions = sessions;
        this.subscriptions = subscriptions;
        this.tag = tag;
    }

    /**
     * Getter for Id.
     * Unique id of the participant
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return this.id;
    }

    /**
     * Setter for Id.
     * Unique id of the participant
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for CallbackUrl.
     * Full callback url to use for notifications about this participant
     * @return Returns the String
     */
    @JsonGetter("callbackUrl")
    public String getCallbackUrl() {
        return this.callbackUrl;
    }

    /**
     * Setter for CallbackUrl.
     * Full callback url to use for notifications about this participant
     * @param callbackUrl Value for String
     */
    @JsonSetter("callbackUrl")
    public void setCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
    }

    /**
     * Getter for PublishPermissions.
     * Defines if this participant can publish audio or video
     * @return Returns the List of PublishPermissionEnum
     */
    @JsonGetter("publishPermissions")
    public List<PublishPermissionEnum> getPublishPermissions() {
        return this.publishPermissions;
    }

    /**
     * Setter for PublishPermissions.
     * Defines if this participant can publish audio or video
     * @param publishPermissions Value for List of PublishPermissionEnum
     */
    @JsonSetter("publishPermissions")
    public void setPublishPermissions(List<PublishPermissionEnum> publishPermissions) {
        this.publishPermissions = publishPermissions;
    }

    /**
     * Getter for Sessions.
     * List of session ids this participant is associated with Capped to one
     * @return Returns the List of String
     */
    @JsonGetter("sessions")
    public List<String> getSessions() {
        return this.sessions;
    }

    /**
     * Setter for Sessions.
     * List of session ids this participant is associated with Capped to one
     * @param sessions Value for List of String
     */
    @JsonSetter("sessions")
    public void setSessions(List<String> sessions) {
        this.sessions = sessions;
    }

    /**
     * Getter for Subscriptions.
     * @return Returns the Subscriptions
     */
    @JsonGetter("subscriptions")
    public Subscriptions getSubscriptions() {
        return this.subscriptions;
    }

    /**
     * Setter for Subscriptions.
     * @param subscriptions Value for Subscriptions
     */
    @JsonSetter("subscriptions")
    public void setSubscriptions(Subscriptions subscriptions) {
        this.subscriptions = subscriptions;
    }

    /**
     * Getter for Tag.
     * User defined tag to associate with the participant
     * @return Returns the String
     */
    @JsonGetter("tag")
    public String getTag() {
        return this.tag;
    }

    /**
     * Setter for Tag.
     * User defined tag to associate with the participant
     * @param tag Value for String
     */
    @JsonSetter("tag")
    public void setTag(String tag) {
        this.tag = tag;
    }

    /**
     * Converts this Participant into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Participant [" + "id=" + id + ", callbackUrl=" + callbackUrl
                + ", publishPermissions=" + publishPermissions + ", sessions=" + sessions
                + ", subscriptions=" + subscriptions + ", tag=" + tag + "]";
    }

    /**
     * Builds a new {@link Participant.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Participant.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .callbackUrl(getCallbackUrl())
                .publishPermissions(getPublishPermissions())
                .sessions(getSessions())
                .subscriptions(getSubscriptions())
                .tag(getTag());
        return builder;
    }

    /**
     * Class to build instances of {@link Participant}.
     */
    public static class Builder {
        private String id;
        private String callbackUrl;
        private List<PublishPermissionEnum> publishPermissions;
        private List<String> sessions;
        private Subscriptions subscriptions;
        private String tag;



        /**
         * Setter for id.
         * @param id String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for callbackUrl.
         * @param callbackUrl String value for callbackUrl.
         * @return Builder
         */
        public Builder callbackUrl(String callbackUrl) {
            this.callbackUrl = callbackUrl;
            return this;
        }

        /**
         * Setter for publishPermissions.
         * @param publishPermissions List of PublishPermissionEnum value for publishPermissions.
         * @return Builder
         */
        public Builder publishPermissions(List<PublishPermissionEnum> publishPermissions) {
            this.publishPermissions = publishPermissions;
            return this;
        }

        /**
         * Setter for sessions.
         * @param sessions List of String value for sessions.
         * @return Builder
         */
        public Builder sessions(List<String> sessions) {
            this.sessions = sessions;
            return this;
        }

        /**
         * Setter for subscriptions.
         * @param subscriptions Subscriptions value for subscriptions.
         * @return Builder
         */
        public Builder subscriptions(Subscriptions subscriptions) {
            this.subscriptions = subscriptions;
            return this;
        }

        /**
         * Setter for tag.
         * @param tag String value for tag.
         * @return Builder
         */
        public Builder tag(String tag) {
            this.tag = tag;
            return this;
        }

        /**
         * Builds a new {@link Participant} object using the set fields.
         * @return {@link Participant}
         */
        public Participant build() {
            return new Participant(id, callbackUrl, publishPermissions, sessions, subscriptions,
                    tag);
        }
    }
}
