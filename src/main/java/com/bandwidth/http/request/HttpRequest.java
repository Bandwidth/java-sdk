/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.http.request;

import java.util.AbstractMap.SimpleEntry;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.bandwidth.http.Headers;

/**
 * Class for creating and managing HTTP Requests
 */
public class HttpRequest {

    /**
     * Private store for properties
     */
    private HttpMethod httpMethod;
    private Headers headers;
    private StringBuilder queryUrlBuilder;
    private List<SimpleEntry<String, Object>> parameters;
    private Map<String, Object> queryParameters;

    /**
     * Headers for the http request
     */
    public HttpMethod getHttpMethod() {
        return httpMethod;
    }

    /**
     * Headers for the http request
     */
    public Headers getHeaders() {
        return headers;
    }

    /**
     * Query url for the http request
     */
    public String getQueryUrl() {
        return queryUrlBuilder.toString();
    }

    /**
     * Parameters for the http request
     */
    public List<SimpleEntry<String, Object>> getParameters() {
        return parameters;
    }

    /**
     * Query parameters for the http request
     */
    public Map<String, Object> getQueryParameters() {
        return queryParameters;
    }

    /**
     * Add Query parameter in http request
     */
    public void addQueryParameter(String key, Object value) {
        if(key == null || key.isEmpty() || value == null) return;

        if(queryParameters == null){
            queryParameters = new HashMap<String, Object>();
        }
        queryParameters.put(key, value);
    }

    /**
     * Initializes a simple http request
     *
     * @param method           The HTTP method to use. Can be GET, HEAD, PUT, POST, DELETE and PATCH
     * @param queryUrlBuilder  The http url to create the HTTP Request. Expect a fully qualified absolute Url
     * @param headers          The key-value map of all http headers to be sent
     * @param queryParameters The query parameters in a key-value map
     * @param parameters       The form data values in a key-value map
     */
    public HttpRequest(HttpMethod method, StringBuilder queryUrlBuilder, Headers headers, 
             Map<String, Object> queryParameters, List<SimpleEntry<String, Object>> parameters) {
        this.httpMethod = method;
        this.queryUrlBuilder = queryUrlBuilder;
        this.headers = headers;
        this.queryParameters = queryParameters;
        this.parameters = parameters;
    }
}
