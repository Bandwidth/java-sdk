/*
 * MessagingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.messaging.models;

import java.util.*;

public class BandwidthMessageBuilder {
    //the instance to build
    private BandwidthMessage bandwidthMessage;

    /**
     * Default constructor to initialize the instance
     */
    public BandwidthMessageBuilder() {
        bandwidthMessage = new BandwidthMessage();
    }

    public BandwidthMessageBuilder id(String id) {
        bandwidthMessage.setId(id);
        return this;
    }

    public BandwidthMessageBuilder owner(String owner) {
        bandwidthMessage.setOwner(owner);
        return this;
    }

    public BandwidthMessageBuilder applicationId(String applicationId) {
        bandwidthMessage.setApplicationId(applicationId);
        return this;
    }

    public BandwidthMessageBuilder time(String time) {
        bandwidthMessage.setTime(time);
        return this;
    }

    public BandwidthMessageBuilder segmentCount(String segmentCount) {
        bandwidthMessage.setSegmentCount(segmentCount);
        return this;
    }

    public BandwidthMessageBuilder direction(String direction) {
        bandwidthMessage.setDirection(direction);
        return this;
    }

    public BandwidthMessageBuilder to(List<String> to) {
        bandwidthMessage.setTo(to);
        return this;
    }

    public BandwidthMessageBuilder from(String from) {
        bandwidthMessage.setFrom(from);
        return this;
    }

    public BandwidthMessageBuilder media(List<String> media) {
        bandwidthMessage.setMedia(media);
        return this;
    }

    public BandwidthMessageBuilder text(String text) {
        bandwidthMessage.setText(text);
        return this;
    }

    public BandwidthMessageBuilder tag(String tag) {
        bandwidthMessage.setTag(tag);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public BandwidthMessage build() {
        return bandwidthMessage;
    }
}