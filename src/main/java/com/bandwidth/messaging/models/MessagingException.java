/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

package com.bandwidth.messaging.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for MessagingException type.
 */
public class MessagingException {
    private String type;
    private String description;

    /**
     * Default constructor.
     */
    public MessagingException() {
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  description  String value for description.
     */
    public MessagingException(
            String type,
            String description) {
        this.type = type;
        this.description = description;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Converts this MessagingException into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "MessagingException [" + "type=" + type + ", description=" + description + "]";
    }

    /**
     * Builds a new {@link MessagingException.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link MessagingException.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type, description);
        return builder;
    }

    /**
     * Class to build instances of {@link MessagingException}.
     */
    public static class Builder {
        private String type;
        private String description;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         * @param  description  String value for description.
         */
        public Builder(String type, String description) {
            this.type = type;
            this.description = description;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Builds a new {@link MessagingException} object using the set fields.
         * @return {@link MessagingException}
         */
        public MessagingException build() {
            return new MessagingException(type, description);
        }
    }
}
