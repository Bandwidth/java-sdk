/*
 * BandwidthLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.messaging.exceptions;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.bandwidth.http.client.HttpContext;
import com.bandwidth.exceptions.ApiException;
import com.bandwidth.messaging.models.FieldError;


/**
 * This is a model class for GenericClientException type.
 */
public class GenericClientException
        extends ApiException {
    private static final long serialVersionUID = -4651771181595010980L;
    /**
     * Initialization constructor
     * @param   reason  The reason for throwing exception
     * @param   context The http context of the API exception
     */
    public GenericClientException(String reason, HttpContext context) {
        super(reason, context);
    }

    private String type;
    private String description;
    private List<FieldError> fieldErrors;
    /**
     * Getter for Type.
     */
    @JsonGetter("type")
    public String getType() {
        return this.type;
    }
    /**
     * Setter for Type.
     */
    @JsonSetter("type")
    private void setType(String value) {
        this.type = value;
    }

    /**
     * Getter for Description.
     */
    @JsonGetter("description")
    public String getDescription() {
        return this.description;
    }
    /**
     * Setter for Description.
     */
    @JsonSetter("description")
    private void setDescription(String value) {
        this.description = value;
    }

    /**
     * Getter for FieldErrors.
     */
    @JsonGetter("fieldErrors")
    public List<FieldError> getFieldErrors() {
        return this.fieldErrors;
    }
    /**
     * Setter for FieldErrors.
     */
    @JsonSetter("fieldErrors")
    private void setFieldErrors(List<FieldError> value) {
        this.fieldErrors = value;
    }

 

}
