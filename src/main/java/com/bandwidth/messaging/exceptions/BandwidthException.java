/*
 * MessagingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bandwidth.messaging.exceptions;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.bandwidth.messaging.http.client.HttpContext;
import com.bandwidth.messaging.models.*;

public class BandwidthException 
        extends APIException
        implements java.io.Serializable {
    private static final long serialVersionUID = 4358768619111842985L;
    private String type;
    private String description;
    private String id;
    private List<FieldError> fieldErrors;
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("type")
    public String getType ( ) { 
        return this.type;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("type")
    private void setType (String value) { 
        this.type = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("description")
    public String getDescription ( ) { 
        return this.description;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("description")
    private void setDescription (String value) { 
        this.description = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("id")
    public String getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("id")
    private void setId (String value) { 
        this.id = value;
    }
 
    /** GETTER
     * TODO: Write general description for this method
     */
    @JsonGetter("fieldErrors")
    public List<FieldError> getFieldErrors ( ) { 
        return this.fieldErrors;
    }
    
    /** SETTER
     * TODO: Write general description for this method
     */
    @JsonSetter("fieldErrors")
    private void setFieldErrors (List<FieldError> value) { 
        this.fieldErrors = value;
    }
 
    /**
     * Initialization constructor
     * @param   reason  The reason for throwing exception
     * @param   context The http context of the API exception
     */
    public BandwidthException(String reason, HttpContext context) {
        super(reason, context);
    }
}
