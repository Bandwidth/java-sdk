name: Publish package to the Maven Central Repository
on:
  release:
    types:
      - published
jobs:
  publish:
    if: ${{ !github.event.release.prerelease && github.event.release.target_commitish == 'main' }}
    env:
      # Integration test environment variables.
      BW_ACCOUNT_ID: ${{ secrets.BW_ACCOUNT_ID }}
      BW_PASSWORD: ${{ secrets.BW_PASSWORD }}
      BW_USERNAME: ${{ secrets.BW_USERNAME }}
      MESSAGING_APPLICATION_ID: ${{ secrets.MESSAGING_APPLICATION_ID }}
      MFA_MESSAGING_APPLICATION_ID: ${{ secrets.MFA_MESSAGING_APPLICATION_ID }}
      MFA_VOICE_APPLICATION_ID: ${{ secrets.MFA_VOICE_APPLICATION_ID }}
      PHONE_NUMBER_INBOUND: ${{ secrets.PHONE_NUMBER_INBOUND }}
      PHONE_NUMBER_MFA: ${{ secrets.PHONE_NUMBER_MFA }}
      PHONE_NUMBER_OUTBOUND: ${{ secrets.PHONE_NUMBER_OUTBOUND }}
      VOICE_APPLICATION_ID: ${{ secrets.VOICE_APPLICATION_ID }}
      VOICE_CALLBACK_URL: ${{ secrets.VOICE_CALLBACK_URL }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Apache Maven Central
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Get Maven project version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

    - name: Set Maven project version
      run: mvn versions:set -DnewVersion=$RELEASE_VERSION

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
