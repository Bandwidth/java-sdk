name: Deploy
on:
  release:
    types:
      - published
jobs:
  publish:
    if: ${{ !github.event.release.prerelease && github.event.release.target_commitish == 'main' }}
    env:
      # Integration test environment variables.
      BW_ACCOUNT_ID: ${{ secrets.BW_ACCOUNT_ID }}
      BW_PASSWORD: ${{ secrets.BW_PASSWORD }}
      BW_USERNAME: ${{ secrets.BW_USERNAME }}
      BW_VOICE_APPLICATION_ID: ${{ secrets.BW_VOICE_APPLICATION_ID }}
      BW_MESSAGING_APPLICATION_ID: ${{ secrets.BW_MESSAGING_APPLICATION_ID }}
      BW_NUMBER: ${{ secrets.BW_NUMBER }}
      USER_NUMBER: ${{ secrets.USER_NUMBER }}
      BASE_CALLBACK_URL: ${{ secrets.BASE_CALLBACK_URL }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Apache Maven Central
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Get Maven Project Version
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV

    - name: Set Maven Project Version
      run: mvn versions:set -DnewVersion=$RELEASE_VERSION

    - name: Publish to Apache Maven Central
      run: mvn deploy
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Notify Slack
      uses: Bandwidth/build-notify-slack-action@v1.0.0
      if: always()
      with:
        job-status: ${{ job.status }}
        slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
        slack-channel: ${{ secrets.SLACK_CHANNEL }}
